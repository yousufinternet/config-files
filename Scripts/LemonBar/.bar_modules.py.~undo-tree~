(undo-tree-save-format-version . 1)
"577672b946b94ec18565eff5194b6ec1922988ee"
[nil nil nil nil (25583 49074 550934 121000) 0 nil]
([nil nil ((nil rear-nonsticky nil 17109 . 17110) (#("
" 0 1 (fontified nil)) . -17877) (17109 . 17878) 16347 (t 25192 2453 753970 738000)) nil (25583 49074 550933 350000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -17110) (undo-tree-id103 . -4) 17114 (17110 . 17114) (17110 . 17111) 17115) nil (25583 49074 550932 394000) 0 nil])
([nil nil ((17117 . 17118) (#("C" 0 1 (fontified t face font-lock-type-face)) . 17117)) nil (25583 49074 550931 126000) 0 nil])
([nil nil ((nil rear-nonsticky nil 17444 . 17445) (nil fontified nil 17385 . 17445) (17385 . 17445) 17384) nil (25583 49074 550930 508000) 0 nil])
([nil nil ((#("sensors" 0 7 (fontified t face font-lock-string-face)) . 17445) (undo-tree-id102 . -6)) nil (25583 49074 550929 200000) 0 nil])
([nil nil ((17366 . 17371) (17363 . 17366) (#("sensors" 0 7 (fontified t face font-lock-variable-name-face)) . 17363) (undo-tree-id101 . -6)) nil (25583 49074 550927 667000) 0 nil])
([nil nil ((#("        temps = [int(line.split()[2].split('.')[0]) for line in
                 sensors.split('\\n') if line.startswith('Core')]
        avg_temp = sum(temps)/len(temps)
" 0 8 (fontified t) 8 13 (fontified t face font-lock-variable-name-face) 13 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-1-face)) 17 20 (fontified t face font-lock-builtin-face) 20 21 (fontified t face (rainbow-delimiters-depth-2-face)) 21 31 (fontified t) 31 32 (fontified t face (rainbow-delimiters-depth-3-face)) 32 33 (fontified t face (rainbow-delimiters-depth-3-face)) 33 34 (fontified t face (rainbow-delimiters-depth-3-face)) 34 35 (fontified t face highlight-numbers-number) 35 36 (fontified t face (rainbow-delimiters-depth-3-face)) 36 42 (fontified t) 42 43 (fontified t face (rainbow-delimiters-depth-3-face)) 43 46 (fontified t face font-lock-string-face) 46 47 (fontified t face (rainbow-delimiters-depth-3-face)) 47 48 (fontified t face (rainbow-delimiters-depth-3-face)) 48 49 (fontified t face highlight-numbers-number) 49 50 (fontified t face (rainbow-delimiters-depth-3-face)) 50 51 (fontified t face (rainbow-delimiters-depth-2-face)) 51 52 (fontified t) 52 55 (fontified t face font-lock-keyword-face) 55 61 (fontified t) 61 63 (fontified t face font-lock-keyword-face) 63 94 (fontified t) 94 95 (fontified t face (rainbow-delimiters-depth-2-face)) 95 99 (fontified t face font-lock-string-face) 99 100 (fontified t face (rainbow-delimiters-depth-2-face)) 100 101 (fontified t) 101 103 (fontified t face font-lock-keyword-face) 103 119 (fontified t) 119 120 (fontified t face (rainbow-delimiters-depth-2-face)) 120 126 (fontified t face font-lock-string-face) 126 127 (fontified t face (rainbow-delimiters-depth-2-face)) 127 128 (fontified t face (rainbow-delimiters-depth-1-face)) 128 137 (fontified t) 137 145 (fontified t face font-lock-variable-name-face) 145 148 (fontified t) 148 151 (fontified t face font-lock-builtin-face) 151 152 (fontified t face (rainbow-delimiters-depth-1-face)) 152 157 (fontified t) 157 158 (fontified t face (rainbow-delimiters-depth-1-face)) 158 159 (fontified t) 159 162 (fontified t face font-lock-builtin-face) 162 163 (fontified t face (rainbow-delimiters-depth-1-face)) 163 168 (fontified t) 168 169 (fontified t face (rainbow-delimiters-depth-1-face)) 169 170 (fontified t)) . 17449) (undo-tree-id94 . -144) (undo-tree-id95 . -169) (undo-tree-id96 . -144) (undo-tree-id97 . -15) (undo-tree-id98 . -144) (undo-tree-id99 . -15) (undo-tree-id100 . -144) 17593) nil (25583 49074 550925 787000) 0 nil])
([nil nil ((17521 . 17522) (#("r" 0 1 (fontified t composition (4 2 [8744]) prettify-symbols-start 17520 prettify-symbols-end 17522 face font-lock-keyword-face)) . -17521) (undo-tree-id93 . -1) 17522) nil (25583 49074 550854 49000) 0 nil])
([nil nil ((17546 . 17554) (#("avg_temp" 0 8 (fontified t)) . 17546) (undo-tree-id92 . -7)) nil (25583 49074 550852 686000) 0 nil])
([nil nil ((17511 . 17514) (#("avg" 0 3 (fontified t)) . 17511) (undo-tree-id91 . -2)) nil (25583 49074 550851 769000) 0 nil])
([nil nil ((17629 . 17632) (#("avg" 0 3 (fontified t)) . 17629) (undo-tree-id90 . -2)) nil (25583 49074 550850 623000) 0 nil])
([nil nil ((17687 . 17691) (#("'\\uf76b'" 0 8 (fontified t face font-lock-string-face)) . 17687) (undo-tree-id88 . -7) (undo-tree-id89 . -2) 17689) nil (25583 49074 550849 414000) 0 nil])
([nil nil ((#("f769" 0 4 (fontified t face font-lock-string-face)) . 16959) (undo-tree-id85 . -3) (undo-tree-id86 . -4) (undo-tree-id87 . -4)) nil (25583 49074 550847 12000) 0 nil])
([nil nil ((#("'" 0 1 (fontified nil face font-lock-string-face)) . -16956) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . 16957) (undo-tree-id55 . 1) (undo-tree-id56 . 1) (undo-tree-id57 . 1) (undo-tree-id58 . -1) (#("\\" 0 1 (fontified t face font-lock-string-face)) . -16957) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("u" 0 1 (fontified t face font-lock-string-face)) . -16958) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) 16959) nil (25583 49074 550843 673000) 0 nil])
([nil nil ((16956 . 16960)) nil (25583 49074 550812 914000) 0 nil])
([nil nil ((17030 . 17034) (#("'\\uf76b'" 0 8 (fontified t face font-lock-string-face)) . 17030) (undo-tree-id0 . -7) (undo-tree-id1 . -1) (undo-tree-id2 . -8) (undo-tree-id3 . -8) (undo-tree-id4 . -7) (undo-tree-id5 . -7) (undo-tree-id6 . -6) (undo-tree-id7 . -6) (undo-tree-id8 . -5) (undo-tree-id9 . -5) (undo-tree-id10 . -4) (undo-tree-id11 . -4) (undo-tree-id12 . -3) (undo-tree-id13 . -3) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -8) (undo-tree-id28 . -8) 17031) nil (25583 49074 550809 996000) 0 nil])
([nil nil ((17601 . 17605) (#("'\\uf769'" 0 8 (fontified t face font-lock-string-face)) . 17601) (undo-tree-id104 . -7) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -8) (undo-tree-id114 . -8) 17603 (t 25583 49074 559530 762000)) nil (25583 49086 392864 256000) 0 nil])
([nil nil ((17629 . 17630) (t 25583 49086 396197 619000)) nil (25583 49600 3156 523000) 0 nil])
([nil nil ((17703 . 17704) (17702 . 17703)) nil (25583 49600 3155 24000) 0 nil])
([nil nil ((17705 . 17706) (17703 . 17704)) nil (25583 49600 3151 604000) 0 nil])
([nil nil ((17441 . 17442) (17366 . 17367) (t 25583 49600 9539 103000)) nil (25583 49703 91903 640000) 0 nil])
([nil nil ((17366 . 17369)) nil (25583 49703 91900 143000) 0 nil])
([nil nil ((17697 . 17700) (#("avg" 0 3 (fontified t)) . 17697) (undo-tree-id115 . -2) (undo-tree-id116 . -3) (undo-tree-id117 . -3) (t 25583 49703 96207 369000)) nil (25583 49719 680176 845000) 0 nil])
([nil nil ((34740 . 34742) (34739 . 34741) (#("'" 0 1 (fontified nil)) . -34739) (34733 . 34740) (#(" " 0 1 (fontified t)) . -34733) (undo-tree-id0 . -1) (#("o" 0 1 (fontified t)) . -34734) (undo-tree-id1 . -1) (#("n" 0 1 (fontified t)) . -34735) (undo-tree-id2 . -1) (#(" " 0 1 (fontified t)) . -34736) (undo-tree-id3 . -1) 34737 (34722 . 34737) (34714 . 34722) (34714 . 34715) 34726 (t 25583 49719 686207 621000)) nil (25593 9444 319438 123000) 0 nil])
([nil nil ((nil rear-nonsticky nil 34745 . 34746) (nil fontified nil 34742 . 34746) (34742 . 34746) 34741) nil (25593 9444 319415 9000) 0 nil])
([nil nil ((34896 . 34916) (34894 . 34896)) nil (25593 9444 319414 382000) 0 nil])
([nil nil ((34921 . 34927) (34916 . 34921)) nil (25593 9444 319413 626000) 0 nil])
([nil nil ((34894 . 34897)) nil (25593 9444 319413 266000) 0 nil])
([nil nil ((34771 . 34773) (34770 . 34772) (#("'" 0 1 (fontified nil)) . -34770) (34756 . 34771) (34748 . 34756) (34748 . 34749) 34777) nil (25593 9444 319412 705000) 0 nil])
([nil nil ((nil rear-nonsticky nil 34776 . 34777) (nil fontified nil 34773 . 34777) (34773 . 34777) 34772) nil (25593 9444 319411 844000) 0 nil])
([nil nil ((apply -2 34779 34841 undo--wrap-and-run-primitive-undo 34779 34841 ((34787 . 34789) 34807))) nil (25593 9444 319408 756000) 0 nil])
([nil nil ((34807 . 34820) (34798 . 34807) (#("coffee" 0 6 (fontified t)) . -34798) (undo-tree-id4 . -6) (undo-tree-id5 . -6) 34804 (34795 . 34804) (#(";" 0 1 (fontified t)) . -34795) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 34796 (34793 . 34796) (34792 . 34794) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -34792) (34787 . 34793) (34778 . 34787) (t 25593 9444 325693 60000) 34766) nil (25593 9500 172095 389000) 0 nil])
([nil nil ((#("        print(self.coffee_on, self.coffee)
" 0 8 (fontified t) 8 13 (face font-lock-builtin-face fontified t) 13 14 (face (rainbow-delimiters-depth-1-face) fontified t) 14 18 (face font-lock-keyword-face fontified t) 18 19 (fontified t) 19 30 (fontified t) 30 34 (face font-lock-keyword-face fontified t) 34 41 (fontified t) 41 42 (face (rainbow-delimiters-depth-1-face) fontified t) 42 43 (fontified t)) . 34779) (undo-tree-id41 . -37) (undo-tree-id42 . -37) (undo-tree-id43 . -42) (undo-tree-id44 . 2) (undo-tree-id45 . -37) (undo-tree-id46 . -20) (undo-tree-id47 . -20) (undo-tree-id48 . -20) (undo-tree-id49 . -20) (undo-tree-id50 . -20) (undo-tree-id51 . -20) (undo-tree-id52 . -42) (undo-tree-id53 . -8) (undo-tree-id54 . -8) (undo-tree-id55 . -42) (undo-tree-id56 . -42) (undo-tree-id57 . -20) (undo-tree-id58 . -20) (undo-tree-id59 . -20) (undo-tree-id60 . -20) (undo-tree-id61 . -20) (undo-tree-id62 . -20) (undo-tree-id63 . -20) (undo-tree-id64 . -20) (undo-tree-id65 . -43) 34799 (t 25593 9500 179027 290000)) nil (25593 10079 598134 105000) 0 nil])
([nil nil ((apply 2 34779 34810 undo--wrap-and-run-primitive-undo 34779 34810 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -34787) 34799))) nil (25593 10079 598120 844000) 0 nil])
([nil nil ((#("        self.coffee = '\\uf874'
" 0 8 (fontified t) 8 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 19 (face font-lock-variable-name-face fontified t) 19 22 (fontified t) 22 25 (face font-lock-string-face fontified t) 25 28 (face font-lock-string-face fontified t) 28 29 (face font-lock-string-face rear-nonsticky t fontified t) 29 30 (face font-lock-string-face fontified t) 30 31 (fontified t)) . 34748) (undo-tree-id8 . -31) (undo-tree-id9 . -30) (undo-tree-id10 . -31) (undo-tree-id11 . -31) (undo-tree-id12 . -18) (undo-tree-id13 . -31) (undo-tree-id14 . -31) (undo-tree-id15 . -31) (undo-tree-id16 . -31) (undo-tree-id17 . -31) (undo-tree-id18 . -31) (undo-tree-id19 . -31) (undo-tree-id20 . -30) (undo-tree-id21 . -31) (undo-tree-id22 . -30) (undo-tree-id23 . -31) (undo-tree-id24 . -31) (undo-tree-id25 . -31) (undo-tree-id26 . -31) (undo-tree-id27 . -31) (undo-tree-id28 . -31) (undo-tree-id29 . -31) (undo-tree-id30 . -31) (undo-tree-id31 . -31) (undo-tree-id32 . -31) (undo-tree-id33 . -30) (undo-tree-id34 . -30) (undo-tree-id35 . -31) (undo-tree-id36 . -18) (undo-tree-id37 . -18) (undo-tree-id38 . -18) (undo-tree-id39 . -18) (undo-tree-id40 . -31) 34766) nil (25593 10079 598116 829000) 0 nil])
([nil nil ((apply 2 8520 8581 undo--wrap-and-run-primitive-undo 8520 8581 ((#("# " 0 2 (face font-lock-comment-delimiter-face fontified t)) . -8536) 8543)) (t 25593 10079 605703 265000)) nil (25593 10405 192784 657000) 0 nil])
([nil nil ((8610 . 8612) (8609 . 8611) (#("'" 0 1 (fontified nil)) . -8609) (8600 . 8610) (8597 . 8600) (8580 . 8597) 8541) nil (25593 10405 192783 991000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8615 . 8616) (nil fontified nil 8612 . 8616) (8612 . 8616) 8611) nil (25593 10405 192783 160000) 0 nil])
([nil nil ((8617 . 8621)) nil (25593 10405 192782 367000) 0 nil])
([nil nil ((#("                " 0 16 (fontified t)) . -8581) (undo-tree-id171 . -16) 8597 (8580 . 8597) 8559) nil (25593 10405 192781 627000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8589 . 8590) (#("
" 0 1 (fontified nil)) . -8661) (8581 . 8662)) nil (25593 10405 192780 624000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 8581) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1)) nil (25593 10405 192780 38000) 0 nil])
([nil nil ((#("        " 0 7 (fontified nil) 7 8 (rear-nonsticky t fontified nil)) . -8593) (undo-tree-id149 . -7) (undo-tree-id150 . -8) (undo-tree-id151 . -8) (undo-tree-id152 . -8) (undo-tree-id153 . -8) (undo-tree-id154 . -8) (undo-tree-id155 . -8) (undo-tree-id156 . -8) (undo-tree-id157 . -8) (undo-tree-id158 . -8) (undo-tree-id159 . -8) (undo-tree-id160 . 8) (undo-tree-id161 . -8) (undo-tree-id162 . -8) (undo-tree-id163 . -8) (undo-tree-id164 . -8) (undo-tree-id165 . -8) (undo-tree-id166 . -8) (undo-tree-id167 . 8) (8581 . 8593)) nil (25593 10405 192778 316000) 0 nil])
([nil nil ((#("            " 0 12 (fontified nil)) . -8597) (undo-tree-id124 . -12) (undo-tree-id125 . -12) (undo-tree-id126 . -12) (undo-tree-id127 . -12) (undo-tree-id128 . -12) (undo-tree-id129 . -12) (undo-tree-id130 . -12) (undo-tree-id131 . -12) (undo-tree-id132 . -12) (undo-tree-id133 . -12) (undo-tree-id134 . -12) (undo-tree-id135 . -12) (undo-tree-id136 . -12) (undo-tree-id137 . -12) (undo-tree-id138 . -12) (undo-tree-id139 . -12) (undo-tree-id140 . -12) (undo-tree-id141 . -12) (undo-tree-id142 . -12) (undo-tree-id143 . -12) (undo-tree-id144 . -12) (undo-tree-id145 . -12) (undo-tree-id146 . -12) (undo-tree-id147 . -12) (undo-tree-id148 . 12) (8581 . 8597)) nil (25593 10405 192769 686000) 0 nil])
([nil nil ((8731 . 8733) (#("'" 0 1 (fontified nil)) . -8731) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (8726 . 8732) (8709 . 8726) (#("s" 0 1 (fontified t)) . -8709) (undo-tree-id123 . -1) 8710 (8709 . 8710)) nil (25593 10405 192700 663000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8738 . 8739) (nil fontified nil 8731 . 8739) (8731 . 8739)) nil (25593 10405 192698 889000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . 8739) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . 1) (undo-tree-id117 . 1) (undo-tree-id118 . 1) (undo-tree-id119 . -1) (undo-tree-id120 . -1)) nil (25593 10405 192698 169000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . 8739) (undo-tree-id100 . 1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . 1) (undo-tree-id105 . 1) (undo-tree-id106 . 1) (undo-tree-id107 . 1) (undo-tree-id108 . -1) (undo-tree-id109 . -1)) nil (25593 10405 192692 870000) 0 nil])
([nil nil ((8757 . 8765) (8739 . 8757)) nil (25593 10405 192687 815000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8772 . 8773) (nil fontified nil 8765 . 8773) (8765 . 8773) 8764) nil (25593 10405 192687 269000) 0 nil])
([nil nil ((#("'\\uf1eb'" 0 8 (face font-lock-string-face fontified t)) . 8938) (undo-tree-id66 . -7) (undo-tree-id67 . -7) (undo-tree-id68 . -7) (undo-tree-id69 . -7) (undo-tree-id70 . -2) (undo-tree-id71 . -8) (undo-tree-id72 . -8) (undo-tree-id73 . -7) (undo-tree-id74 . -7) (undo-tree-id75 . -6) (undo-tree-id76 . -6) (undo-tree-id77 . -5) (undo-tree-id78 . -5) (undo-tree-id79 . -4) (undo-tree-id80 . -4) (undo-tree-id81 . -3) (undo-tree-id82 . -3) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -8) (undo-tree-id89 . -7) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -6) (undo-tree-id95 . -6) (undo-tree-id96 . -7) (undo-tree-id97 . -7) (undo-tree-id98 . -7) (undo-tree-id99 . -8) 8945) nil (25593 10405 192685 326000) 0 nil])
([nil nil ((8938 . 8947)) nil (25593 10405 192659 885000) 0 nil])
([nil nil ((#(".loc" 0 4 (fontified t)) . 8620) (undo-tree-id198 . -3) (undo-tree-id199 . -3) (undo-tree-id200 . -3) (undo-tree-id201 . -3) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -4) (undo-tree-id211 . -3) (undo-tree-id212 . -3) (undo-tree-id213 . -3) (undo-tree-id214 . -3) (undo-tree-id215 . -4) 8623 (t 25593 10405 199041 825000)) nil (25593 10446 738334 69000) 0 nil])
([nil nil ((#("wifi_nets['SSID'].index(dev_con), " 0 9 (fontified t) 9 10 (face (rainbow-delimiters-depth-2-face) fontified t) 10 16 (face font-lock-string-face fontified t) 16 17 (face (rainbow-delimiters-depth-2-face) fontified t) 17 23 (fontified t) 23 24 (face (rainbow-delimiters-depth-2-face) fontified t) 24 31 (fontified t) 31 32 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t) 32 34 (fontified t)) . 8621) (undo-tree-id186 . -33) (undo-tree-id187 . -33) (undo-tree-id188 . -33) (undo-tree-id189 . -33) (undo-tree-id190 . -34) (undo-tree-id191 . -33) (undo-tree-id192 . -32) (undo-tree-id193 . -32) (undo-tree-id194 . -33) (undo-tree-id195 . -33) (undo-tree-id196 . -33) (undo-tree-id197 . -34) 8654) nil (25593 10446 738325 702000) 0 nil])
([nil nil ((8630 . 8632) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -8630) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (8630 . 8631)) nil (25593 10446 738320 5000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8664 . 8665) (nil fontified nil 8631 . 8665) (8631 . 8665) 8630) nil (25593 10446 738318 189000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 8663) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1)) nil (25593 10446 738317 65000) 0 nil])
([nil nil ((#(" " 0 1 (rear-nonsticky t fontified t)) . 8663) (undo-tree-id172 . 1) (undo-tree-id173 . -1) (undo-tree-id174 . -1)) nil (25593 10446 738309 665000) 0 nil])
([nil nil ((8665 . 8666) (8611 . 8612) 8663 (t 25593 10446 745709 162000)) nil (25593 10486 797281 300000) 0 nil])
([nil nil ((8611 . 8616)) nil (25593 10486 797277 364000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8701 . 8702) (nil fontified nil 8701 . 8702) (8701 . 8702) 8700 (t 25593 10486 802376 472000)) nil (25593 10832 963105 814000) 0 nil])
([nil nil ((#("\\uf6aa" 0 2 (face font-lock-string-face fontified t) 2 5 (face font-lock-string-face fontified t) 5 6 (face font-lock-string-face fontified t rear-nonsticky t)) . 8702) (undo-tree-id216 . -5) (undo-tree-id217 . -5) (undo-tree-id218 . -5) (undo-tree-id219 . -2) (undo-tree-id220 . -5) (undo-tree-id221 . -4) (undo-tree-id222 . -4) (undo-tree-id223 . -3) (undo-tree-id224 . -3) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . 6) (undo-tree-id230 . 6) (undo-tree-id231 . 6) (undo-tree-id232 . -6) (undo-tree-id233 . -5) (undo-tree-id234 . -5) (undo-tree-id235 . -5) (undo-tree-id236 . -5) (undo-tree-id237 . -6) 8707) nil (25593 10832 963104 127000) 0 nil])
([nil nil ((8961 . 8968)) nil (25593 10832 963080 403000) 0 nil])
([nil nil ((8967 . 8968) (#("3" 0 1 (face highlight-numbers-number fontified t)) . 8967) (t 25593 10832 969048 706000)) nil (25593 10952 256742 304000) 0 nil])
([nil nil ((#("\\uf6ab" 0 6 (face font-lock-string-face fontified t)) . 8730) (undo-tree-id243 . -5)) nil (25593 10952 256741 758000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8730 . 8731) (nil fontified nil 8730 . 8731) (8730 . 8731)) nil (25593 10952 256740 966000) 0 nil])
([nil nil ((#("\\uf1eb" 0 6 (face font-lock-string-face fontified t)) . 8759) (undo-tree-id242 . -5)) nil (25593 10952 256740 335000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8759 . 8760) (nil fontified nil 8759 . 8760) (8759 . 8760)) nil (25593 10952 256739 276000) 0 nil])
([nil nil ((8721 . 8723) (#("30" 0 2 (face highlight-numbers-number fontified t)) . 8721) (undo-tree-id241 . -1)) nil (25593 10952 256738 693000) 0 nil])
([nil nil ((8750 . 8752) (#("70" 0 2 (face highlight-numbers-number fontified t)) . 8750) (undo-tree-id240 . -1)) nil (25593 10952 256737 678000) 0 nil])
([nil nil ((8779 . 8781) (8761 . 8779)) nil (25593 10952 256736 587000) 0 nil])
([nil nil ((8787 . 8789) (#("'" 0 1 (fontified nil)) . -8787) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (8781 . 8788)) nil (25593 10952 256735 518000) 0 nil])
([nil nil ((nil rear-nonsticky nil 8788 . 8789) (nil fontified nil 8788 . 8789) (8788 . 8789) 8787) nil (25593 10952 256722 774000) 0 nil])
([nil nil ((#(", idx=4" 0 2 (fontified t) 2 6 (fontified t) 6 7 (face highlight-numbers-number fontified t)) . 8980) (undo-tree-id244 . -6) (undo-tree-id245 . -6) (undo-tree-id246 . -6) (undo-tree-id247 . -6) (undo-tree-id248 . -6) (undo-tree-id249 . -6) (undo-tree-id250 . -6) (undo-tree-id251 . -2) (undo-tree-id252 . -2) (undo-tree-id253 . -6) (undo-tree-id254 . -6) (undo-tree-id255 . -6) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -2) (undo-tree-id259 . -2) (undo-tree-id260 . -3) (undo-tree-id261 . -3) (undo-tree-id262 . -4) (undo-tree-id263 . -4) (undo-tree-id264 . -5) (undo-tree-id265 . -5) (undo-tree-id266 . -6) (undo-tree-id267 . -6) (undo-tree-id268 . -7) (undo-tree-id269 . -7) (undo-tree-id270 . -7) (undo-tree-id271 . -7) (undo-tree-id272 . -5) (undo-tree-id273 . -5) (undo-tree-id274 . -5) (undo-tree-id275 . -5) (undo-tree-id276 . -4) (undo-tree-id277 . -4) (undo-tree-id278 . -3) (undo-tree-id279 . -3) (undo-tree-id280 . -2) (undo-tree-id281 . -2) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -7) (undo-tree-id285 . -6) (undo-tree-id286 . -4) (undo-tree-id287 . -4) (undo-tree-id288 . -5) (undo-tree-id289 . -5) (undo-tree-id290 . -6) (undo-tree-id291 . -6) (undo-tree-id292 . -6) (undo-tree-id293 . -7) 8986 (t 25593 10952 262383 952000)) nil (25593 11041 540641 488000) 0 nil])
([nil nil ((8597 . 8601) (8581 . 8597) (8581 . 8582) 8604 (t 25593 11041 545718 720000)) nil (25779 1892 933027 612000) 0 nil])
([nil nil ((#("                " 0 16 (fontified nil)) . -8622) (undo-tree-id15 . -16) (undo-tree-id16 . -16) (undo-tree-id17 . 16) (undo-tree-id18 . -16) (undo-tree-id19 . -16) (undo-tree-id20 . -16) (undo-tree-id21 . -16) (undo-tree-id22 . -16) (undo-tree-id23 . -16) (undo-tree-id24 . -16) (undo-tree-id25 . -16) (undo-tree-id26 . -16) (undo-tree-id27 . -16) (undo-tree-id28 . -16) (undo-tree-id29 . -16) (undo-tree-id30 . -16) (undo-tree-id31 . -16) (undo-tree-id32 . 16) (8602 . 8622) 8621) nil (25779 1892 933026 600000) 0 nil])
([nil nil ((8729 . 8731) (8713 . 8729) (#("    " 0 4 (fontified t)) . -8713) (undo-tree-id14 . -4) 8717 (8696 . 8717) 8621) nil (25779 1892 933016 839000) 0 nil])
([nil nil ((8767 . 8769) (#("-" 0 1 (fontified t)) . -8767) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("-" 0 1 (fontified t)) . -8768) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) 8769 (8752 . 8769) (8731 . 8752) 8730) nil (25779 1892 933012 517000) 0 nil])
([nil current ((8401 . 8405) (8400 . 8402) (#("'" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -8400) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (8400 . 8401) (#("v" 0 1 (fontified t)) . -8400) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (#("e" 0 1 (fontified t)) . -8401) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (#("t" 0 1 (fontified t)) . -8402) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (#("h" 0 1 (fontified t)) . -8403) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) 8404 (8400 . 8404) (8399 . 8401) (#("(" 0 1 (fontified nil)) . -8399) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (8397 . 8400) (8376 . 8397) (t 25779 1892 959307 249000)) nil (25779 1914 274103 449000) 0 nil])
nil
