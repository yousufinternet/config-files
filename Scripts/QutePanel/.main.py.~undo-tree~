(undo-tree-save-format-version . 1)
"16d0155c3c2bb951dead5d0376e39c7e0bb2049a"
[nil nil nil nil (25587 33949 390383 175000) 0 nil]
([nil nil ((apply -2 2412 2690 undo--wrap-and-run-primitive-undo 2412 2690 ((2416 . 2418) 2415)) (t 25586 36773 172424 151000)) nil (25587 33949 390378 980000) 0 nil])
([nil nil ((apply 2 2412 2644 undo--wrap-and-run-primitive-undo 2412 2644 ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -2416) 2415)) (t 25587 33949 412033 302000)) nil (25587 34228 652642 227000) 0 nil])
([nil nil ((#("    lbl.setStyleSheet('font-family: \"Font Awesome 6 Free Solid\"')
" 0 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-1-face)) 22 64 (fontified t face font-lock-string-face) 64 65 (fontified t face (rainbow-delimiters-depth-1-face)) 65 66 (fontified t)) . 2774) (undo-tree-id13 . -65) (undo-tree-id14 . -58) 2832 (t 25587 34228 652037 184000)) nil (25587 47436 123473 761000) 0 nil])
([nil nil ((#("    lbl = QLabel('\\uf0ac \\uf5fc \\uf120 \\uf02d \\uf274 \\uf518 \\uf1fc')
" 0 4 (fontified t) 4 7 (fontified t face font-lock-variable-name-face) 7 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-1-face)) 17 67 (fontified t face font-lock-string-face) 67 68 (fontified t face (rainbow-delimiters-depth-1-face)) 68 69 (fontified t)) . 2705) (undo-tree-id7 . -18) (undo-tree-id8 . -68) (undo-tree-id9 . -18) (undo-tree-id10 . -18) (undo-tree-id11 . -18) (undo-tree-id12 . -36) 2741) nil (25587 47436 123471 961000) 0 nil])
([nil nil ((#("    panel.addWidget(lbl)
" 0 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 23 (fontified t) 23 24 (fontified t face (rainbow-delimiters-depth-1-face)) 24 25 (fontified t)) . 2772) (undo-tree-id0 . -24) (undo-tree-id1 . -23) (undo-tree-id2 . 2) (undo-tree-id3 . -24) (undo-tree-id4 . 6) (undo-tree-id5 . -20) (undo-tree-id6 . -23) 2795) nil (25587 47436 123466 941000) 0 nil])
([nil nil ((2741 . 2746) (t 25587 47436 128889 387000)) nil (25587 48800 501723 979000) 0 nil])
([nil nil ((#("panel" 0 5 (fontified t)) . 2741) (undo-tree-id104 . -4) (undo-tree-id105 . -4) (undo-tree-id106 . -4) (undo-tree-id107 . -4) (undo-tree-id108 . -4) (undo-tree-id109 . -4) (undo-tree-id110 . -4) (undo-tree-id111 . -4) (undo-tree-id112 . -4) (undo-tree-id113 . -4) (undo-tree-id114 . -4) (undo-tree-id115 . -4) (undo-tree-id116 . -4) (undo-tree-id117 . -4) (undo-tree-id118 . -4) (undo-tree-id119 . -5) 2745 (t 25587 48800 505576 69000)) nil (25587 48821 658465 254000) 0 nil])
([nil nil ((2766 . 2770) (#("parent" 0 6 (fontified nil)) . 2766) (undo-tree-id51 . -6) (undo-tree-id52 . 6) (2765 . 2766) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 2765 2770 nil nil nil t #s(yas--field 2 2772 2773 nil nil nil nil #s(yas--exit 2774 nil))) #s(yas--field 2 2772 2773 nil nil nil nil #s(yas--exit 2774 nil))) #s(yas--exit 2774 nil) 7 nil #s(yas--field 1 2765 2770 nil nil nil t #s(yas--field 2 2772 2773 nil nil nil nil #s(yas--exit 2774 nil))) nil nil)) (2755 . 2775) (#("setParent" 0 9 (fontified nil)) . -2755) (2755 . 2764) (#("setPa" 0 5 (fontified t)) . -2755) (undo-tree-id53 . -5) (undo-tree-id54 . -5) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) (undo-tree-id72 . -3) (undo-tree-id73 . -3) (undo-tree-id74 . -4) (undo-tree-id75 . -4) (undo-tree-id76 . -4) (undo-tree-id77 . -4) (undo-tree-id78 . -5) (undo-tree-id79 . -5) (undo-tree-id80 . -5) 2760 (2754 . 2760) (2747 . 2754) (#("herb" 0 4 (fontified t)) . -2747) (undo-tree-id81 . -4) (undo-tree-id82 . -4) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -3) (undo-tree-id90 . -3) (undo-tree-id91 . -3) (undo-tree-id92 . -4) (undo-tree-id93 . -4) (undo-tree-id94 . -4) (undo-tree-id95 . -4) (undo-tree-id96 . -4) (undo-tree-id97 . -4) (undo-tree-id98 . -4) (undo-tree-id99 . -4) (undo-tree-id100 . -4) (undo-tree-id101 . -4) (undo-tree-id102 . -4) (undo-tree-id103 . -4) 2751 (2747 . 2751) (2742 . 2747) 2741) nil (25587 48821 658456 310000) 0 nil])
([nil nil ((apply yas--snippet-revive 2755 2774 #s(yas--snippet nil (#s(yas--field 1 2765 2770 nil nil nil t #s(yas--field 2 2772 2773 nil nil nil nil #s(yas--exit 2774 nil))) #s(yas--field 2 2772 2773 nil nil nil nil #s(yas--exit 2774 nil))) #s(yas--exit 2774 nil) 7 nil #s(yas--field 1 2765 2770 nil nil nil t #s(yas--field 2 2772 2773 nil nil nil nil #s(yas--exit 2774 nil))) nil nil))) nil (25587 48821 658067 752000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . 2770) (undo-tree-id36 . 1) (undo-tree-id37 . 1) (undo-tree-id38 . 1) (undo-tree-id39 . 1) (undo-tree-id40 . 1) (undo-tree-id41 . 1) (undo-tree-id42 . 1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1)) nil (25587 48821 658067 248000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2770) (undo-tree-id26 . 1) (undo-tree-id27 . 1) (undo-tree-id28 . 1) (undo-tree-id29 . 1) (undo-tree-id30 . 1) (undo-tree-id31 . 1) (undo-tree-id32 . 1) (undo-tree-id33 . 1) (undo-tree-id34 . -1) (undo-tree-id35 . -1)) nil (25587 48821 658060 329000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 2770) (undo-tree-id15 . 1) (undo-tree-id16 . 1) (undo-tree-id17 . 1) (undo-tree-id18 . 1) (undo-tree-id19 . 1) (undo-tree-id20 . 1) (undo-tree-id21 . 1) (undo-tree-id22 . 1) (undo-tree-id23 . 1) (undo-tree-id24 . -1) (undo-tree-id25 . -1)) nil (25587 48821 658053 728000) 0 nil])
([nil nil ((2637 . 2638) (#("-" 0 1 (fontified t face font-lock-string-face)) . 2637) (undo-tree-id120 . -1) (2637 . 2638) (#("2" 0 1 (fontified t face font-lock-string-face)) . 2637) (undo-tree-id121 . -1) (t 25587 48821 662243 49000)) nil (25587 48938 769471 260000) 0 nil])
([nil nil ((#("background-color: transparent; " 0 31 (fontified t face font-lock-string-face)) . 2464) (undo-tree-id122 . -30) (undo-tree-id123 . -30) (undo-tree-id124 . -30) (undo-tree-id125 . -30) (undo-tree-id126 . -31) (undo-tree-id127 . -30) (undo-tree-id128 . -9) (undo-tree-id129 . -9) (undo-tree-id130 . -16) (undo-tree-id131 . -16) (undo-tree-id132 . -29) (undo-tree-id133 . -29) (undo-tree-id134 . -30) (undo-tree-id135 . -30) (undo-tree-id136 . -30) (undo-tree-id137 . -31) 2494 (t 25587 48938 772244 788000)) nil (25587 49085 788202 403000) 0 nil])
([nil nil ((2446 . 2447) (#("0" 0 1 (fontified t face font-lock-string-face)) . 2446) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (t 25587 49085 792246 954000)) nil (25587 49109 351469 801000) 0 nil])
([nil nil ((#(", 80%" 0 5 (fontified t face font-lock-string-face)) . 1217) (undo-tree-id145 . -4) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) (undo-tree-id149 . -5) (undo-tree-id150 . -4) (undo-tree-id151 . -3) (undo-tree-id152 . -3) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -5) 1221 (t 25587 49109 358913 960000)) nil (25587 49137 467116 380000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face font-lock-string-face)) . 1208) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1)) nil (25587 49137 467096 467000) 0 nil])
([nil nil ((#("        self.main_frame.setMidLineWidth(0)
        self.main_frame.setFrameShape(QFrame.StyledPanel)
        self.main_frame.setFrameShadow(QFrame.Raised)
        self.main_frame.setProperty(\"main_frame\", \"t\")
" 0 8 (fontified t) 8 12 (fontified t face font-lock-keyword-face) 12 39 (fontified t) 39 40 (fontified t face (rainbow-delimiters-depth-1-face)) 40 41 (fontified t face highlight-numbers-number) 41 42 (fontified t face (rainbow-delimiters-depth-1-face)) 42 51 (fontified t) 51 55 (fontified t face font-lock-keyword-face) 55 80 (fontified t) 80 81 (fontified t face (rainbow-delimiters-depth-1-face)) 81 99 (fontified t) 99 100 (fontified t face (rainbow-delimiters-depth-1-face)) 100 109 (fontified t) 109 113 (fontified t face font-lock-keyword-face) 113 139 (fontified t) 139 140 (fontified t face (rainbow-delimiters-depth-1-face)) 140 153 (fontified t) 153 154 (fontified t face (rainbow-delimiters-depth-1-face)) 154 163 (fontified t) 163 167 (fontified t face font-lock-keyword-face) 167 190 (fontified t) 190 191 (fontified t face (rainbow-delimiters-depth-1-face)) 191 203 (fontified t face font-lock-string-face) 203 205 (fontified t) 205 208 (fontified t face font-lock-string-face) 208 209 (fontified t face (rainbow-delimiters-depth-1-face)) 209 210 (fontified t)) . 913) (undo-tree-id178 . -196) (undo-tree-id179 . -41) (undo-tree-id180 . -196) (undo-tree-id181 . -209) (undo-tree-id182 . -196) (undo-tree-id183 . -42) (undo-tree-id184 . -100) (undo-tree-id185 . -154) (undo-tree-id186 . -209) (undo-tree-id187 . -42) (undo-tree-id188 . -100) (undo-tree-id189 . -154) (undo-tree-id190 . -209) (undo-tree-id191 . -42) (undo-tree-id192 . -100) (undo-tree-id193 . -154) (undo-tree-id194 . -209) (undo-tree-id195 . -42) (undo-tree-id196 . -100) (undo-tree-id197 . -154) (undo-tree-id198 . -209) (undo-tree-id199 . -42) (undo-tree-id200 . -100) (undo-tree-id201 . -154) (undo-tree-id202 . -209) (undo-tree-id203 . -42) (undo-tree-id204 . -100) (undo-tree-id205 . -154) (undo-tree-id206 . -209) (undo-tree-id207 . -42) (undo-tree-id208 . -100) (undo-tree-id209 . -154) (undo-tree-id210 . -209) (undo-tree-id211 . -42) (undo-tree-id212 . -100) (undo-tree-id213 . -154) (undo-tree-id214 . -209) (undo-tree-id215 . -42) (undo-tree-id216 . -100) (undo-tree-id217 . -154) (undo-tree-id218 . -209) (undo-tree-id219 . -42) (undo-tree-id220 . -100) (undo-tree-id221 . -154) (undo-tree-id222 . -209) (undo-tree-id223 . -42) (undo-tree-id224 . -100) (undo-tree-id225 . -154) (undo-tree-id226 . -209) (undo-tree-id227 . -42) (undo-tree-id228 . -100) (undo-tree-id229 . -154) (undo-tree-id230 . -209) (undo-tree-id231 . -42) (undo-tree-id232 . -100) (undo-tree-id233 . -154) (undo-tree-id234 . -209) (undo-tree-id235 . -42) (undo-tree-id236 . -100) (undo-tree-id237 . -154) (undo-tree-id238 . -209) (undo-tree-id239 . -42) (undo-tree-id240 . -100) (undo-tree-id241 . -154) (undo-tree-id242 . -209) (undo-tree-id243 . -42) (undo-tree-id244 . -100) (undo-tree-id245 . -154) (undo-tree-id246 . -209) (undo-tree-id247 . -42) (undo-tree-id248 . -100) (undo-tree-id249 . -154) (undo-tree-id250 . -209) (undo-tree-id251 . -42) (undo-tree-id252 . -100) (undo-tree-id253 . -154) (undo-tree-id254 . -209) (undo-tree-id255 . -42) (undo-tree-id256 . -100) (undo-tree-id257 . -154) (undo-tree-id258 . -209) (undo-tree-id259 . -42) (undo-tree-id260 . -100) (undo-tree-id261 . -154) (undo-tree-id262 . -209) (undo-tree-id263 . -208) (undo-tree-id264 . -208) (undo-tree-id265 . -42) (undo-tree-id266 . -100) (undo-tree-id267 . -154) (undo-tree-id268 . -209) (undo-tree-id269 . -42) (undo-tree-id270 . -100) (undo-tree-id271 . -154) (undo-tree-id272 . -209) (undo-tree-id273 . -208) (undo-tree-id274 . -208) (undo-tree-id275 . -153) (undo-tree-id276 . -153) (undo-tree-id277 . -99) (undo-tree-id278 . -99) (undo-tree-id279 . -41) (undo-tree-id280 . -41) (undo-tree-id281 . -41) (undo-tree-id282 . -41) (undo-tree-id283 . -99) (undo-tree-id284 . -99) (undo-tree-id285 . -41) (undo-tree-id286 . -41) (undo-tree-id287 . -41) (undo-tree-id288 . -42) (undo-tree-id289 . -8) (undo-tree-id290 . -8) (undo-tree-id291 . -42) (undo-tree-id292 . -100) (undo-tree-id293 . -154) (undo-tree-id294 . -209) (undo-tree-id295 . -42) (undo-tree-id296 . -100) (undo-tree-id297 . -154) (undo-tree-id298 . -209) (undo-tree-id299 . -41) (undo-tree-id300 . -210) (undo-tree-id301 . -41) (undo-tree-id302 . -196) (undo-tree-id303 . -41) (undo-tree-id304 . -41) (undo-tree-id305 . -41) (undo-tree-id306 . -84) (undo-tree-id307 . -154) (undo-tree-id308 . -109) (undo-tree-id309 . -109) (undo-tree-id310 . -42) (undo-tree-id311 . -100) (undo-tree-id312 . -154) (undo-tree-id313 . -209) (undo-tree-id314 . -42) (undo-tree-id315 . -100) (undo-tree-id316 . -154) (undo-tree-id317 . -209) (undo-tree-id318 . -142) (undo-tree-id319 . -155) (undo-tree-id320 . -196) (undo-tree-id321 . -196) (undo-tree-id322 . -210) 1109 (t 25587 49137 472247 699000)) nil (25587 49192 422928 816000) 0 nil])
([nil nil ((905 . 911) (#("Frame" 0 5 (fontified t)) . 905) (undo-tree-id157 . -4) (undo-tree-id158 . -5) (undo-tree-id159 . -5) (undo-tree-id160 . -5) (undo-tree-id161 . -5) (undo-tree-id162 . -5) (undo-tree-id163 . -5) (undo-tree-id164 . -5) (undo-tree-id165 . -5) (undo-tree-id166 . -5) (undo-tree-id167 . -5) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -3) (undo-tree-id171 . -3) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -5) (undo-tree-id177 . -5)) nil (25587 49192 422542 32000) 0 nil])
([nil nil ((apply -2 914 1102 undo--wrap-and-run-primitive-undo 914 1102 ((922 . 924) 954)) (t 25587 49192 428915 174000)) nil (25587 49199 667646 252000) 0 nil])
([nil nil ((apply 2 914 1073 undo--wrap-and-run-primitive-undo 914 1073 ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -922) 1050)) (t 25587 49199 668915 277000)) nil (25587 49255 261407 349000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -922) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) 923 (922 . 923) (913 . 922) (t 25587 49255 265582 758000) 912) nil (25587 49286 32834 300000) 0 nil])
([nil nil ((#("        
" 0 8 (fontified t) 8 9 (fontified t)) . 914) (undo-tree-id323 . -9) (undo-tree-id324 . -8) (undo-tree-id325 . 1) (undo-tree-id326 . -7) (undo-tree-id327 . 1) (undo-tree-id328 . 1) (undo-tree-id329 . -8) (undo-tree-id330 . -8) (undo-tree-id331 . -8) (undo-tree-id332 . -8) (undo-tree-id333 . -8) (undo-tree-id334 . -8) (undo-tree-id335 . -8) (undo-tree-id336 . 1) (undo-tree-id337 . -8) (undo-tree-id338 . -8) (undo-tree-id339 . -8) (undo-tree-id340 . 1) (undo-tree-id341 . -8) (undo-tree-id342 . -8) (undo-tree-id343 . -7) (undo-tree-id344 . -7) (undo-tree-id345 . -7) (undo-tree-id346 . -7) (undo-tree-id347 . -7) (undo-tree-id348 . -7) (undo-tree-id349 . -7) (undo-tree-id350 . -7) (undo-tree-id351 . -9) 921) nil (25587 49286 32830 920000) 0 nil])
([nil nil ((912 . 916)) nil (25587 49286 32810 473000) 0 nil])
([nil nil ((926 . 941) (917 . 926) 915) nil (25587 49286 32809 400000) 0 nil])
([nil nil ((2552 . 2563)) nil (25587 49286 32806 486000) 0 nil])
([nil nil ((955 . 964) (954 . 956) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -954) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (#("name" 0 4 (fontified nil)) . 955) (undo-tree-id447 . -4) (undo-tree-id448 . 4) (954 . 955) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 954 965 nil nil nil t #s(yas--field 2 967 970 nil nil nil t #s(yas--exit 971 nil))) #s(yas--field 2 967 970 nil nil nil t #s(yas--exit 971 nil))) #s(yas--exit 971 nil) 8 nil #s(yas--field 2 967 970 nil nil nil t #s(yas--exit 971 nil)) nil nil)) (942 . 966) (#("setProperty" 0 11 (fontified nil)) . -942) (942 . 953) (#("setPr" 0 5 (fontified t)) . -942) (undo-tree-id449 . -5) (undo-tree-id450 . -5) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -2) (undo-tree-id455 . -2) (undo-tree-id456 . -2) (undo-tree-id457 . -2) (undo-tree-id458 . -2) (undo-tree-id459 . -2) (undo-tree-id460 . -2) (undo-tree-id461 . -2) (undo-tree-id462 . -2) (undo-tree-id463 . -2) (undo-tree-id464 . -2) (undo-tree-id465 . -2) (undo-tree-id466 . -2) (undo-tree-id467 . -2) (undo-tree-id468 . -3) (undo-tree-id469 . -3) (undo-tree-id470 . -3) (undo-tree-id471 . -3) (undo-tree-id472 . -3) (undo-tree-id473 . -4) (undo-tree-id474 . -4) (undo-tree-id475 . -4) (undo-tree-id476 . -4) (undo-tree-id477 . -4) (undo-tree-id478 . -4) (undo-tree-id479 . -4) (undo-tree-id480 . -4) (undo-tree-id481 . -4) (undo-tree-id482 . -4) (undo-tree-id483 . -4) (undo-tree-id484 . -5) (undo-tree-id485 . -5) (undo-tree-id486 . -5) (undo-tree-id487 . -5) (undo-tree-id488 . -5) (undo-tree-id489 . -5) (undo-tree-id490 . -5) (undo-tree-id491 . -5) (undo-tree-id492 . -5) (undo-tree-id493 . -5) (undo-tree-id494 . -5) (undo-tree-id495 . -5) (undo-tree-id496 . -5) 947 (944 . 947) (#("r" 0 1 (fontified t)) . -944) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (#("t" 0 1 (fontified t)) . -945) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) 946 (941 . 946) (t 25587 49286 35583 210000)) nil (25587 49331 97858 974000) 0 nil])
([nil nil ((968 . 969) (967 . 969) (#("\"" 0 1 (fontified nil)) . -967) (undo-tree-id441 . -1) (#("value" 0 5 (fontified nil)) . 968) (undo-tree-id442 . -5) (967 . 968)) nil (25587 49331 97827 686000) 0 nil])
([nil nil ((apply yas--snippet-revive 942 971 #s(yas--snippet nil (#s(yas--field 1 954 965 nil nil nil t #s(yas--field 2 967 970 nil nil nil t #s(yas--exit 971 nil))) #s(yas--field 2 967 970 nil nil nil t #s(yas--exit 971 nil))) #s(yas--exit 971 nil) 8 nil #s(yas--field 2 967 970 nil nil nil t #s(yas--exit 971 nil)) nil nil))) nil (25587 49331 97826 40000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t face font-lock-string-face)) . 1022) (undo-tree-id439 . -1) (undo-tree-id440 . -1)) nil (25587 49331 97825 497000) 0 nil])
([nil nil ((1012 . 1018) (#("Frame" 0 5 (fontified t face font-lock-string-face)) . 1012) (undo-tree-id426 . -4) (undo-tree-id427 . -5) (undo-tree-id428 . -5) (undo-tree-id429 . -4) (undo-tree-id430 . -4) (undo-tree-id431 . -3) (undo-tree-id432 . -3) (undo-tree-id433 . -2) (undo-tree-id434 . -2) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -5) (undo-tree-id438 . -5)) nil (25587 49331 97823 450000) 0 nil])
([nil nil ((1011 . 1012) (#("(" 0 1 (fontified nil face font-lock-string-face)) . -1011) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (#(")" 0 1 (fontified t face font-lock-string-face)) . 1012) (undo-tree-id367 . -1) (1011 . 1013) (#("(" 0 1 (fontified nil face font-lock-string-face)) . -1011) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (1011 . 1012) (#("QWidget" 0 7 (fontified t face font-lock-string-face)) . 1011) (undo-tree-id370 . -6) (undo-tree-id371 . -6) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -2) (undo-tree-id396 . -2) (undo-tree-id397 . -2) (undo-tree-id398 . -3) (undo-tree-id399 . -3) (undo-tree-id400 . -3) (undo-tree-id401 . -4) (undo-tree-id402 . -4) (undo-tree-id403 . -4) (undo-tree-id404 . -5) (undo-tree-id405 . -5) (undo-tree-id406 . -5) (undo-tree-id407 . -6) (undo-tree-id408 . -6) (undo-tree-id409 . -6) (undo-tree-id410 . -7) (undo-tree-id411 . -7) (undo-tree-id412 . -6) (undo-tree-id413 . -6) (undo-tree-id414 . -6) (undo-tree-id415 . -6) (undo-tree-id416 . -6) (undo-tree-id417 . -6) (undo-tree-id418 . -6) (undo-tree-id419 . -6) (undo-tree-id420 . -6) (undo-tree-id421 . -6) (undo-tree-id422 . -6) (undo-tree-id423 . -6) (undo-tree-id424 . -7) (undo-tree-id425 . -7) 1017) nil (25587 49331 97814 624000) 0 nil])
([nil nil ((2336 . 2339) (2315 . 2336) (t 25587 49331 102250 532000)) nil (25587 49365 793488 491000) 0 nil])
([nil nil ((2339 . 2340)) nil (25587 49365 793484 865000) 0 nil])
([nil nil ((apply -2 972 1154 undo--wrap-and-run-primitive-undo 972 1154 ((980 . 982) 1062)) (t 25587 49365 798917 713000)) nil (25587 49376 38421 758000) 0 nil])
([nil nil ((apply -2 705 832 undo--wrap-and-run-primitive-undo 705 832 ((713 . 715) 705)) (t 25587 49376 42251 194000)) nil (25587 49476 497496 523000) 0 nil])
([nil nil ((112 . 113) (#("5" 0 1 (fontified t)) . 112) (t 25587 49476 505585 988000)) nil (25587 49688 831439 766000) 0 nil])
([nil nil ((137 . 138) (#("5" 0 1 (fontified t)) . 137)) nil (25587 49688 831439 176000) 0 nil])
([nil nil ((133 . 140) (#("Py" 0 2 (fontified t)) . -133) (undo-tree-id530 . -2) (undo-tree-id531 . -2) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -2) (undo-tree-id536 . -2) (undo-tree-id537 . -2) (undo-tree-id538 . -2) (undo-tree-id539 . -2) (undo-tree-id540 . -2) (undo-tree-id541 . -2) (undo-tree-id542 . -2) 135 (133 . 135) (#("PyQt6" 0 4 (fontified t) 4 5 (fontified t)) . 133) (undo-tree-id543 . -4) (undo-tree-id544 . -4) (undo-tree-id545 . -4) (undo-tree-id546 . -4) (undo-tree-id547 . -4) (undo-tree-id548 . -4) (undo-tree-id549 . -4) (undo-tree-id550 . -4) (undo-tree-id551 . -4) (undo-tree-id552 . -5) (undo-tree-id553 . -5)) nil (25587 49688 831438 76000) 0 nil])
([nil nil ((112 . 116) (108 . 112) (#("PyQt6 " 0 4 (fontified t) 4 5 (fontified t) 5 6 (fontified t)) . 108) (undo-tree-id510 . -5) (undo-tree-id511 . -2) (undo-tree-id512 . -6) (undo-tree-id513 . -5) (undo-tree-id514 . -5) (undo-tree-id515 . -5) (undo-tree-id516 . -5) (undo-tree-id517 . -4) (undo-tree-id518 . -4) (undo-tree-id519 . -4) (undo-tree-id520 . -4) (undo-tree-id521 . -3) (undo-tree-id522 . -3) (undo-tree-id523 . -2) (undo-tree-id524 . -2) (undo-tree-id525 . -2) (undo-tree-id526 . -2) (undo-tree-id527 . -2) (undo-tree-id528 . -6) (undo-tree-id529 . -6) 110) nil (25587 49688 831423 737000) 0 nil])
([nil nil ((apply 2 709 771 undo--wrap-and-run-primitive-undo 709 771 ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -717) 721)) (t 25587 49688 835589 60000)) nil (25587 49955 483381 99000) 0 nil])
([nil nil ((apply -2 709 836 undo--wrap-and-run-primitive-undo 709 836 ((717 . 719) 719))) nil (25587 49955 483378 100000) 0 nil])
([nil nil ((nil rear-nonsticky nil 833 . 834) (nil fontified nil 809 . 834) (809 . 834) 808 (t 25587 49955 488926 235000)) nil (25587 50208 840942 810000) 0 nil])
([nil current ((#("WA_X11NetWmWindowTypeDock" 0 25 (fontified t)) . 834) (undo-tree-id602 . -24) (undo-tree-id603 . -24) (undo-tree-id604 . -24) (undo-tree-id605 . -24) (undo-tree-id606 . -24) (undo-tree-id607 . -24) (undo-tree-id608 . -24) (undo-tree-id609 . -24) (undo-tree-id610 . -24) (undo-tree-id611 . -24)) ((834 . 859)) (25587 50212 45931 522000) 0 nil])
([nil nil ((#("Core" 0 4 (fontified t)) . 125) (undo-tree-id592 . -3) (undo-tree-id594 . -3) (undo-tree-id596 . -3) (undo-tree-id598 . -2) (undo-tree-id600 . -1) (t 25587 50065 658927 824000)) ((125 . 129)) (25587 50206 87516 609000) 0 nil])
([nil nil ((#("QtCore" 0 6 (fontified t)) . 594) (undo-tree-id590 . -5)) ((594 . 600)) (25587 50205 540369 858000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 594) (undo-tree-id588 . -1)) ((594 . 595)) (25587 50205 131380 855000) 0 nil])
([nil nil ((#("QtCore" 0 6 (fontified t)) . 654) (undo-tree-id585 . -5)) ((654 . 660)) (25587 50204 603906 655000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 654) (undo-tree-id583 . -1)) ((654 . 655)) (25587 50203 982340 441000) 0 nil])
([nil nil ((#("QtCore" 0 6 (fontified t)) . 781) (undo-tree-id575 . -5) (undo-tree-id577 . -1) (undo-tree-id579 . -1) (undo-tree-id581 . -6)) ((781 . 787)) (25587 50203 796868 383000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 781) (undo-tree-id573 . -1)) ((781 . 782) (t 25587 50156 825595 839000)) (25587 50203 704164 961000) 0 nil])
([nil nil ((apply 2 691 753 undo--wrap-and-run-primitive-undo 691 753 ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -699) 714)) (t 25587 50156 825595 839000)) ((apply -2 691 755 undo--wrap-and-run-primitive-undo 691 755 ((699 . 701) 712))) (25587 50203 703943 132000) 0 nil])
nil
