(undo-tree-save-format-version . 1)
"96752e7a225f31e64069e4c245c683b4cd248981"
[nil nil nil nil (25584 56607 151041 447000) 0 nil]
([nil nil ((1 . 23) (t . -1)) nil (25584 56607 151040 249000) 0 nil])
([nil nil ((23 . 24) (22 . 23) 21) nil (25584 56607 151039 463000) 0 nil])
([nil nil ((nil rear-nonsticky nil 32 . 33) (#("
" 0 1 (fontified nil)) . -495) (24 . 496)) nil (25584 56607 151038 339000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 23) (undo-tree-id139 . 1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1)) nil (25584 56607 151036 892000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 23) (undo-tree-id134 . 1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . 1) (undo-tree-id138 . -1)) nil (25584 56607 151018 200000) 0 nil])
([nil nil ((#("            " 0 12 (fontified nil)) . -385) (undo-tree-id76 . 12) (381 . 385) (#("        " 0 8 (fontified t)) . -375) (#("            " 0 12 (fontified nil)) . -304) (undo-tree-id77 . -12) (undo-tree-id78 . -12) (undo-tree-id79 . -12) (undo-tree-id80 . -12) (undo-tree-id81 . -12) (undo-tree-id82 . -12) (undo-tree-id83 . -12) (undo-tree-id84 . -12) (undo-tree-id85 . -12) (undo-tree-id86 . -12) (undo-tree-id87 . -12) (undo-tree-id88 . -12) (undo-tree-id89 . -12) (undo-tree-id90 . -12) (undo-tree-id91 . -12) (undo-tree-id92 . -12) (undo-tree-id93 . 12) (300 . 304) (#("        " 0 8 (fontified t)) . -282) (#("        " 0 8 (fontified t)) . -204) (#("        " 0 8 (fontified t)) . -171) (#("                 " 0 17 (fontified nil)) . -123) (undo-tree-id94 . 17) (111 . 123) (#("        " 0 8 (fontified t)) . -55) (undo-tree-id95 . -8) (undo-tree-id96 . -8) (undo-tree-id97 . -8) (undo-tree-id98 . -8) (undo-tree-id99 . -8) (undo-tree-id100 . -8) (undo-tree-id101 . -8) (undo-tree-id102 . -8) (undo-tree-id103 . -8) (undo-tree-id104 . -8) (undo-tree-id105 . -8) (undo-tree-id106 . -8) (undo-tree-id107 . -8) (undo-tree-id108 . -8) (undo-tree-id109 . -8) (undo-tree-id110 . -8) (#("        " 0 7 (fontified t) 7 8 (fontified t rear-nonsticky t)) . -23) (undo-tree-id111 . 8) (undo-tree-id112 . -7) (undo-tree-id113 . -8) (undo-tree-id114 . -8) (undo-tree-id115 . -8) (undo-tree-id116 . -8) (undo-tree-id117 . -8) (undo-tree-id118 . -8) (undo-tree-id119 . -8) (undo-tree-id120 . 8) (undo-tree-id121 . 8) (undo-tree-id122 . -8) (undo-tree-id123 . -8) (undo-tree-id124 . -8) (undo-tree-id125 . -8) (undo-tree-id126 . -8) (undo-tree-id127 . -8) (undo-tree-id128 . -8) (undo-tree-id129 . -7) (undo-tree-id130 . -8) (undo-tree-id131 . -8) (undo-tree-id132 . -8) (undo-tree-id133 . -8) 494) nil (25584 56607 151012 927000) 0 nil])
([nil nil ((23 . 24) (23 . 24)) nil (25584 56607 150711 839000) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . 23) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1)) nil (25584 56607 150710 910000) 0 nil])
([nil nil ((23 . 24) 23) nil (25584 56607 150708 245000) 0 nil])
([nil nil ((40 . 46) (30 . 40) (#("sub" 0 3 (fontified t)) . -30) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) 33 (24 . 33) (23 . 24)) nil (25584 56607 150706 912000) 0 nil])
([nil nil ((26 . 33) (#("r" 0 1 (fontified t)) . -26) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("o" 0 1 (fontified t)) . -27) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) 28 (23 . 28) (23 . 24) 45) nil (25584 56607 150695 435000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 82 85 nil nil nil nil #s(yas--exit 86 nil))) #s(yas--exit 86 nil) 0 nil #s(yas--field 1 82 85 nil nil nil nil #s(yas--exit 86 nil)) nil nil)) (72 . 86) (#("getoutput" 0 9 (fontified nil)) . -72) (72 . 81) (#("ge" 0 2 (fontified t)) . -72) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2) 74 (69 . 74) (#("cmd_output" 0 10 (fontified t)) . 69) (undo-tree-id40 . -9) (undo-tree-id41 . -10) (undo-tree-id42 . -10) (undo-tree-id43 . -10)) nil (25584 56607 150686 173000) 0 nil])
([nil nil ((apply yas--snippet-revive 72 86 #s(yas--snippet nil (#s(yas--field 1 82 85 nil nil nil nil #s(yas--exit 86 nil))) #s(yas--exit 86 nil) 0 nil #s(yas--field 1 82 85 nil nil nil nil #s(yas--exit 86 nil)) nil nil))) nil (25584 56607 150677 290000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 81) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . 1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1)) nil (25584 56607 150676 346000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 81) (undo-tree-id22 . 1) (undo-tree-id23 . 1) (undo-tree-id24 . -1) (undo-tree-id25 . -1)) nil (25584 56607 150672 332000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 81) (undo-tree-id17 . 1) (undo-tree-id18 . 1) (undo-tree-id19 . 1) (undo-tree-id20 . -1) (undo-tree-id21 . -1)) nil (25584 56607 150668 971000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 81) (undo-tree-id11 . 1) (undo-tree-id12 . 1) (undo-tree-id13 . 1) (undo-tree-id14 . 1) (undo-tree-id15 . -1) (undo-tree-id16 . -1)) nil (25584 56607 150664 911000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-unmatched-face))) . 81) (undo-tree-id0 . 1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . 1) (undo-tree-id4 . 1) (undo-tree-id5 . 1) (undo-tree-id6 . 1) (undo-tree-id7 . 1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1)) nil (25584 56607 150658 36000) 0 nil])
([nil nil ((#("   " 0 3 (fontified t)) . -158) 171 (t 25584 56607 162545 330000)) nil (25584 56659 323134 17000) 0 nil])
([nil nil ((nil rear-nonsticky nil 65 . 66) (58 . 183)) nil (25584 56659 323133 206000) 0 nil])
([nil nil ((58 . 59) 66) nil (25584 56659 323132 487000) 0 nil])
([nil nil ((#("                           " 0 27 (fontified nil)) . -140) (undo-tree-id183 . 27) (120 . 140) (#("        " 0 7 (fontified t) 7 8 (fontified t rear-nonsticky t)) . -59) (undo-tree-id184 . -7) (undo-tree-id185 . -8) (undo-tree-id186 . -8) (undo-tree-id187 . -8) (undo-tree-id188 . -8) (undo-tree-id189 . -8) (undo-tree-id190 . -8) (undo-tree-id191 . -8) (undo-tree-id192 . -8) (undo-tree-id193 . -8) (undo-tree-id194 . -8) (undo-tree-id195 . -8) (undo-tree-id196 . -8) (undo-tree-id197 . -8) (undo-tree-id198 . -8) (undo-tree-id199 . -8) (undo-tree-id200 . -8) (undo-tree-id201 . -8) (undo-tree-id202 . -8) (undo-tree-id203 . -8) (undo-tree-id204 . -8) (undo-tree-id205 . -8) (undo-tree-id206 . 8) (undo-tree-id207 . -8) (undo-tree-id208 . -8) (undo-tree-id209 . -8) (undo-tree-id210 . -8) (undo-tree-id211 . -8) (undo-tree-id212 . -8) (undo-tree-id213 . -8) (undo-tree-id214 . -8) (undo-tree-id215 . -8) (undo-tree-id216 . -8) (undo-tree-id217 . -8) (undo-tree-id218 . -8) (undo-tree-id219 . -8) (undo-tree-id220 . -7) 183) nil (25584 56659 323130 668000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -139) (undo-tree-id182 . -1) 120) nil (25584 56659 323110 863000) 0 nil])
([nil nil ((#("self" 0 4 (fontified t face font-lock-keyword-face)) . 59) (undo-tree-id177 . -3) (undo-tree-id178 . 4) (undo-tree-id179 . 4) (undo-tree-id180 . 4) (undo-tree-id181 . -4)) nil (25584 56659 323109 390000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 59) (undo-tree-id171 . 1) (undo-tree-id172 . 1) (undo-tree-id173 . 1) (undo-tree-id174 . 1) (undo-tree-id175 . -1) (undo-tree-id176 . -1)) nil (25584 56659 323105 791000) 0 nil])
([nil nil ((#("     " 0 5 (fontified t)) . -129) (undo-tree-id160 . -5) (undo-tree-id161 . -5) (undo-tree-id162 . -5) (undo-tree-id163 . -5) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) 115) nil (25584 56659 323100 202000) 0 nil])
([nil nil ((478 . 482) (477 . 479) (#("{" 0 1 (fontified nil face font-lock-string-face)) . -477) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (477 . 478) (467 . 477) (#("p" 0 1 (fontified t face font-lock-string-face)) . -467) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) 468 (464 . 468) (#("i" 0 1 (fontified t face font-lock-string-face)) . -464) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) 465 (460 . 465) (#("r" 0 1 (fontified t face font-lock-string-face)) . -460) (undo-tree-id271 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -461) (undo-tree-id272 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -462) (undo-tree-id273 . -1) 463 (458 . 463) (#(" " 0 1 (fontified t face font-lock-string-face)) . -458) (undo-tree-id274 . -1) 459 (454 . 459) (#("s" 0 1 (fontified t face font-lock-string-face)) . -454) (undo-tree-id275 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -455) (undo-tree-id276 . -1) (#("y" 0 1 (fontified t face font-lock-string-face)) . -456) (undo-tree-id277 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -457) (undo-tree-id278 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -458) (undo-tree-id279 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -459) (undo-tree-id280 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -460) (undo-tree-id281 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -461) (undo-tree-id282 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -462) (undo-tree-id283 . -1) 463 (#("l" 0 1 (fontified t face font-lock-string-face)) . -463) (undo-tree-id284 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -464) (undo-tree-id285 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -465) (undo-tree-id286 . -1) (#(":" 0 1 (fontified t face font-lock-string-face)) . -466) (undo-tree-id287 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -467) (undo-tree-id288 . -1) (#("R" 0 1 (fontified t face font-lock-string-face)) . -468) (undo-tree-id289 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -469) (undo-tree-id290 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -470) (undo-tree-id291 . -1) (#(";" 0 1 (fontified t face font-lock-string-face)) . -471) (undo-tree-id292 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -472) (undo-tree-id293 . -1) (#("f" 0 1 (fontified t face font-lock-string-face)) . -473) (undo-tree-id294 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -474) (undo-tree-id295 . -1) (#("n" 0 1 (fontified t face font-lock-string-face)) . -475) (undo-tree-id296 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -476) (undo-tree-id297 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -477) (undo-tree-id298 . -1) (#("f" 0 1 (fontified t face font-lock-string-face)) . -478) (undo-tree-id299 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -479) (undo-tree-id300 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -480) (undo-tree-id301 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -481) (undo-tree-id302 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -482) (undo-tree-id303 . -1) (#("y" 0 1 (fontified t face font-lock-string-face)) . -483) (undo-tree-id304 . -1) 484 (471 . 484) (#("k" 0 1 (fontified t face font-lock-string-face)) . -471) (undo-tree-id305 . -1) 472 (471 . 472) (#("l" 0 1 (fontified t face font-lock-string-face)) . -471) (undo-tree-id306 . -1) 472 (466 . 472) (455 . 466) (447 . 455) (446 . 448) (#("(" 0 1 (fontified nil face font-lock-string-face)) . -446) (446 . 447) (445 . 447) (#("'" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -445) (445 . 446) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -445) (undo-tree-id307 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . 446) (445 . 447) (#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -445) (445 . 446) (444 . 446) (#("(" 0 1 (fontified nil face font-lock-builtin-face)) . -444) (439 . 445) (#("r" 0 1 (fontified t)) . -439) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (#("e" 0 1 (fontified t)) . -440) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (#("t" 0 1 (fontified t)) . -441) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (#("u" 0 1 (fontified t)) . -442) (undo-tree-id314 . -1) (undo-tree-id315 . -1) 443 (439 . 443) (435 . 439) (435 . 436) 448 (t 25584 56659 332546 240000)) nil (25584 56842 931845 246000) 0 nil])
([nil nil ((445 . 446)) nil (25584 56842 931801 62000) 0 nil])
([nil nil ((485 . 486)) nil (25584 56842 931800 717000) 0 nil])
([nil nil ((487 . 495) (486 . 488) (#("{" 0 1 (fontified nil face font-lock-string-face)) . -486) (486 . 487)) nil (25584 56842 931800 191000) 0 nil])
([nil nil ((#("    return '%{F'+cdict['red']+'}'+ficon(icon)+str(round(avg_temp))+'%{F-}'
" 0 4 (fontified t) 4 10 (fontified t face font-lock-keyword-face) 10 11 (fontified t) 11 16 (fontified t face font-lock-string-face) 16 22 (fontified t) 22 23 (fontified t face (rainbow-delimiters-depth-1-face)) 23 28 (fontified t face font-lock-string-face) 28 29 (fontified t face (rainbow-delimiters-depth-1-face)) 29 30 (fontified t) 30 33 (fontified t face font-lock-string-face) 33 39 (fontified t) 39 40 (fontified t face (rainbow-delimiters-depth-1-face)) 40 44 (fontified t) 44 45 (fontified t face (rainbow-delimiters-depth-1-face)) 45 46 (fontified t) 46 49 (fontified t face font-lock-builtin-face) 49 50 (fontified t face (rainbow-delimiters-depth-1-face)) 50 55 (fontified t face font-lock-builtin-face) 55 56 (fontified t face (rainbow-delimiters-depth-2-face)) 56 64 (fontified t) 64 65 (fontified t face (rainbow-delimiters-depth-2-face)) 65 66 (fontified t face (rainbow-delimiters-depth-1-face)) 66 67 (fontified t) 67 74 (fontified t face font-lock-string-face) 74 75 (fontified t)) . 499) (undo-tree-id244 . -74) (undo-tree-id245 . -59) (undo-tree-id246 . -4) (undo-tree-id247 . -4) (undo-tree-id248 . -4) (undo-tree-id249 . -4) (undo-tree-id250 . -4) (undo-tree-id251 . -4) (undo-tree-id252 . -4) (undo-tree-id253 . -4) (undo-tree-id254 . -4) (undo-tree-id255 . -74) (undo-tree-id256 . -59) (undo-tree-id257 . -59) (undo-tree-id258 . -59) (undo-tree-id259 . -59) (undo-tree-id260 . -75) 558) nil (25584 56842 931799 220000) 0 nil])
([nil nil ((505 . 569) 509) nil (25584 56842 931789 234000) 0 nil])
([nil nil ((#("    return ficon(icon)+str(round(avg_temp))
" 0 4 (fontified t) 4 10 (fontified t face font-lock-keyword-face) 10 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-1-face)) 17 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-1-face)) 22 23 (fontified t) 23 26 (fontified t face font-lock-builtin-face) 26 27 (fontified t face (rainbow-delimiters-depth-1-face)) 27 32 (fontified t face font-lock-builtin-face) 32 33 (fontified t face (rainbow-delimiters-depth-2-face)) 33 41 (fontified t) 41 42 (fontified t face (rainbow-delimiters-depth-2-face)) 42 43 (fontified t face (rainbow-delimiters-depth-1-face)) 43 44 (fontified t)) . 569) (undo-tree-id226 . -43) (undo-tree-id227 . -44) (undo-tree-id228 . -4) (undo-tree-id229 . -4) (undo-tree-id230 . -4) (undo-tree-id231 . -4) (undo-tree-id232 . -4) (undo-tree-id233 . -4) (undo-tree-id234 . -4) (undo-tree-id235 . -4) (undo-tree-id236 . 44) (undo-tree-id237 . -4) (undo-tree-id238 . -43) (undo-tree-id239 . -4) (undo-tree-id240 . -4) (undo-tree-id241 . -4) (undo-tree-id242 . -4) (undo-tree-id243 . -44) 573) nil (25584 56842 931743 221000) 0 nil])
([nil nil ((#("red" 0 3 (fontified t face font-lock-string-face)) . 532) (undo-tree-id224 . -2) (undo-tree-id225 . -3)) nil (25584 56842 931734 132000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t face font-lock-string-face)) . 532) (undo-tree-id221 . 1) (undo-tree-id222 . -1) (undo-tree-id223 . -1)) nil (25584 56842 931730 476000) 0 nil])
([nil nil ((497 . 498) (486 . 487) 495 (t 25584 56842 939216 119000)) nil (25584 56985 789680 646000) 0 nil])
([nil nil ((565 . 566) (554 . 555) 563) nil (25584 56985 789677 192000) 0 nil])
([nil nil ((#("self" 0 4 (fontified t face font-lock-keyword-face)) . 361) (undo-tree-id319 . -3) (undo-tree-id320 . -4) (t 25584 56985 795885 317000)) nil (25584 57034 764115 669000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 361) (undo-tree-id316 . 1) (undo-tree-id317 . -1) (undo-tree-id318 . -1)) nil (25584 57034 764111 278000) 0 nil])
([nil nil ((480 . 481) (473 . 474) 478 (t 25584 57034 769219 504000)) nil (25584 57051 297430 735000) 0 nil])
([nil nil ((550 . 551) (543 . 544) 548) nil (25584 57051 297427 544000) 0 nil])
([nil nil ((496 . 497) (442 . 443) 494 (t 25584 57051 302553 117000)) nil (25584 57940 169482 897000) 0 nil])
([nil nil ((443 . 464)) nil (25584 57940 169482 439000) 0 nil])
([nil nil ((589 . 590) (539 . 540) 587) nil (25584 57940 169481 907000) 0 nil])
([nil nil ((559 . 561) (540 . 559)) nil (25584 57940 169478 741000) 0 nil])
([nil nil ((515 . 519) (t 25584 57940 172568 370000)) nil (25584 58029 118508 33000) 0 nil])
([nil nil ((612 . 616)) nil (25584 58029 118504 197000) 0 nil])
([nil nil ((456 . 477) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -456) (undo-tree-id325 . -1) 457 (450 . 457) (#("c" 0 1 (fontified t face font-lock-string-face)) . -450) (undo-tree-id326 . -1) 451 (447 . 451) (t 25584 58029 122569 765000)) nil (25584 58119 258369 444000) 0 nil])
([nil nil ((579 . 593) (#("e" 0 1 (fontified t face font-lock-string-face)) . -579) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) 580 (578 . 580)) nil (25584 58119 258364 903000) 0 nil])
([nil nil ((593 . 608) (t 25584 58119 262571 166000)) nil (25584 58130 5152 800000) 0 nil])
([nil nil ((619 . 625) (608 . 619) (t 25584 58130 9238 6000)) nil (25584 58141 302077 467000) 0 nil])
([nil nil ((623 . 624) (#(":" 0 1 (fontified t face font-lock-string-face)) . 623) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1)) nil (25584 58141 302074 723000) 0 nil])
([nil nil ((617 . 620) (#("bottom" 0 6 (fontified t face font-lock-string-face)) . 617) (undo-tree-id336 . -5) (undo-tree-id337 . -6) (undo-tree-id338 . -6) (undo-tree-id339 . -6) (undo-tree-id340 . -6) (t 25584 58141 305904 851000)) nil (25584 58404 557548 987000) 0 nil])
([nil nil ((587 . 591) (#("false" 0 5 (fontified t face font-lock-string-face)) . 587) (undo-tree-id341 . -4) (undo-tree-id342 . -5) (undo-tree-id343 . -5) (undo-tree-id344 . -4) (undo-tree-id345 . -4) (undo-tree-id346 . -3) (undo-tree-id347 . -3) (undo-tree-id348 . -2) (undo-tree-id349 . -2) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -5) (undo-tree-id355 . -5) (t 25584 58404 559242 183000)) nil (25584 58503 964653 351000) 0 nil])
([nil nil ((587 . 592) (#("true" 0 4 (fontified t face font-lock-string-face)) . 587) (undo-tree-id356 . -3) (undo-tree-id357 . -3) (undo-tree-id358 . -3) (undo-tree-id359 . -3) (undo-tree-id360 . -3) (undo-tree-id361 . -3) (undo-tree-id362 . -3) (undo-tree-id363 . -3) (undo-tree-id364 . -3) (undo-tree-id365 . -3) (undo-tree-id366 . -2) (undo-tree-id367 . -2) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -4) (undo-tree-id371 . -4) (t 25584 58503 979243 704000)) nil (25584 58513 739874 220000) 0 nil])
([nil nil ((587 . 591) (#("false" 0 5 (fontified t face font-lock-string-face)) . 587) (undo-tree-id372 . -4) (undo-tree-id373 . -4) (undo-tree-id374 . -4) (undo-tree-id375 . -4) (undo-tree-id376 . -4) (undo-tree-id377 . -4) (undo-tree-id378 . -4) (undo-tree-id379 . -4) (undo-tree-id380 . -3) (undo-tree-id381 . -3) (undo-tree-id382 . -3) (undo-tree-id383 . -3) (undo-tree-id384 . -2) (undo-tree-id385 . -2) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -5) (undo-tree-id389 . -5) (t 25584 58513 742577 186000)) nil (25584 58522 72091 608000) 0 nil])
([nil nil ((456 . 460) (#("false" 0 5 (fontified t face font-lock-string-face)) . 456) (undo-tree-id390 . -4) (undo-tree-id391 . -3) (undo-tree-id392 . -3) (undo-tree-id393 . -3) (undo-tree-id394 . -3) (undo-tree-id395 . -2) (undo-tree-id396 . -2) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -5) (undo-tree-id400 . -5) (t 25584 58522 75910 641000)) nil (25584 58531 94973 557000) 0 nil])
([nil nil ((#(":valign \"top\" " 0 12 (fontified t face font-lock-string-face) 12 13 (fontified t face font-lock-string-face) 13 14 (fontified t face font-lock-string-face)) . 606) (undo-tree-id401 . -13) (undo-tree-id402 . -13) (undo-tree-id403 . -13) (undo-tree-id404 . -9) (undo-tree-id405 . -9) (undo-tree-id406 . -13) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -14) (undo-tree-id410 . -13) (undo-tree-id411 . -6) (undo-tree-id412 . -6) (undo-tree-id413 . -12) (undo-tree-id414 . -12) (undo-tree-id415 . -13) (undo-tree-id416 . -13) (undo-tree-id417 . -13) (undo-tree-id418 . -14) 619 (t 25584 58531 99244 113000)) nil (25584 58543 55378 272000) 0 nil])
([nil nil ((#(" :hexpand false" 0 15 (fontified t face font-lock-string-face)) . 590) (undo-tree-id433 . -14) (undo-tree-id434 . -14) (undo-tree-id435 . -14) (undo-tree-id436 . -15) (undo-tree-id437 . -15) (undo-tree-id438 . -14) (undo-tree-id439 . -14) (undo-tree-id440 . -15) (undo-tree-id441 . -14) (undo-tree-id442 . -14) (undo-tree-id443 . -14) (undo-tree-id444 . -14) (undo-tree-id445 . -10) (undo-tree-id446 . -10) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -15) (t 25584 58543 59244 291000)) nil (25584 58556 518577 830000) 0 nil])
([nil nil ((#(":hexpand false " 0 15 (fontified t face font-lock-string-face)) . 461) (undo-tree-id419 . -14) (undo-tree-id420 . -14) (undo-tree-id421 . -14) (undo-tree-id422 . -14) (undo-tree-id423 . -15) (undo-tree-id424 . -14) (undo-tree-id425 . -7) (undo-tree-id426 . -7) (undo-tree-id427 . -13) (undo-tree-id428 . -13) (undo-tree-id429 . -14) (undo-tree-id430 . -14) (undo-tree-id431 . -14) (undo-tree-id432 . -15) 475) nil (25584 58556 518566 134000) 0 nil])
([nil nil ((536 . 541) (535 . 536) (t 25584 58556 522577 824000)) nil (25585 7576 902190 336000) 0 nil])
([nil nil ((656 . 658) (652 . 656)) nil (25585 7576 902187 116000) 0 nil])
([nil nil ((599 . 618) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -599) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) 600 (598 . 600) (t 25585 7576 906138 568000)) nil (25585 7610 380431 18000) 0 nil])
([nil nil ((484 . 498) (#(" " 0 1 (fontified t face font-lock-string-face)) . -484) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) 485 (478 . 485)) nil (25585 7610 380423 113000) 0 nil])
([nil nil ((498 . 509) (t 25585 7610 386139 97000)) nil (25585 7690 306920 240000) 0 nil])
([nil current ((659 . 661) (650 . 659)) nil (25585 7690 306916 801000) 0 nil])
nil
