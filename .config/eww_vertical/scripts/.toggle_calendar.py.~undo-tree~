(undo-tree-save-format-version . 1)
"dec28e0c362632243b976dd6d40804050fde7a3a"
[nil nil nil nil (26042 16092 930635 548000) 0 nil]
([nil nil ((141 . 142) (t 26042 15836 636489 259000) 79) nil (26042 16092 930634 976000) 0 nil])
([nil nil ((177 . 192) (174 . 177) (173 . 175) (#("'" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -173) (173 . 174) (172 . 174) (#("(" 0 1 (fontified nil)) . -172) (157 . 173) (156 . 158) (#("[" 0 1 (fontified nil)) . -156) (156 . 157) (143 . 156) (142 . 143) 142) nil (26042 16092 930634 314000) 0 nil])
([nil nil ((200 . 202) (#("(" 0 1 (fontified nil)) . -200) (194 . 201)) nil (26042 16092 930633 620000) 0 nil])
([nil nil ((213 . 215) (#("(" 0 1 (fontified nil)) . -213) (202 . 214)) nil (26042 16092 930633 209000) 0 nil])
([nil nil ((220 . 227) (219 . 221) (#("'" 0 1 (fontified nil)) . -219) (216 . 220) (#("w" 0 1 (fontified t)) . -216) (undo-tree-id6 . -1) (#(" " 0 1 (fontified t)) . -217) (undo-tree-id7 . -1) (#("f" 0 1 (fontified t)) . -218) (undo-tree-id8 . -1) 219 (215 . 219)) nil (26042 16092 930632 194000) 0 nil])
([nil nil ((228 . 233)) nil (26042 16092 930630 961000) 0 nil])
([nil nil ((157 . 168)) nil (26042 16092 930630 660000) 0 nil])
([nil nil ((246 . 247) (245 . 247) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -245) (245 . 246)) nil (26042 16092 930630 330000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . -245) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 246 (245 . 246)) nil (26042 16092 930629 919000) 0 nil])
([nil nil ((256 . 257) (255 . 257) (#("'" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -255) (255 . 256) (254 . 256) (#("(" 0 1 (fontified nil)) . -254) (248 . 255)) nil (26042 16092 930628 801000) 0 nil])
([nil nil ((260 . 261) (259 . 261) (#("[" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -259) (259 . 260)) nil (26042 16092 930628 290000) 0 nil])
([nil nil ((262 . 263) 260) nil (26042 16092 930627 902000) 0 nil])
([nil nil ((284 . 294) (282 . 284) (281 . 283) (#("'" 0 1 (fontified nil)) . -281) (263 . 282)) nil (26042 16092 930627 489000) 0 nil])
([nil nil ((314 . 323) (313 . 315) (#("'" 0 1 (fontified nil)) . -313) (309 . 314) (299 . 309) (#("acti" 0 4 (fontified t)) . -299) (undo-tree-id2 . -4) (undo-tree-id3 . -4) 303 (295 . 303)) nil (26042 16092 930626 380000) 0 nil])
([nil nil ((322 . 323) (#("w" 0 1 (face font-lock-string-face fontified t)) . 322)) nil (26042 16092 930623 978000) 0 nil])
([nil nil ((295 . 296) (294 . 295)) nil (26042 16092 930622 597000) 0 nil])
([nil nil ((333 . 345) (332 . 334) (#("'" 0 1 (fontified nil)) . -332) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (326 . 333)) nil (26042 16092 930619 492000) 0 nil])
([nil nil ((388 . 389) (t 26042 16092 931399 716000)) nil (26042 16123 882764 212000) 0 nil])
([nil nil ((400 . 401) (#("calendar" 0 8 (face font-lock-string-face fontified t)) . 400) (undo-tree-id23 . -7)) nil (26042 16123 882763 859000) 0 nil])
([nil nil ((405 . 416) (#("d" 0 1 (face nil fontified t)) . -405) (undo-tree-id17 . -1) 406 (401 . 406) (400 . 402) (#("{" 0 1 (face font-lock-string-face fontified nil)) . -400) (400 . 401) (#("e_pop" 0 5 (face font-lock-string-face fontified t)) . 400) (undo-tree-id18 . 4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) 404) nil (26042 16123 882762 952000) 0 nil])
([nil nil ((410 . 411) (#("W" 0 1 (face nil fontified t)) . 410)) nil (26042 16123 882759 671000) 0 nil])
([nil nil ((519 . 534) (518 . 520) (#("{" 0 1 (face font-lock-string-face fontified nil)) . -518) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (518 . 519) (#("calendar_pop" 0 12 (face font-lock-string-face fontified t)) . 518) (undo-tree-id11 . -11) (undo-tree-id12 . -11) (undo-tree-id13 . -11) (undo-tree-id14 . -11) (undo-tree-id15 . -12) (undo-tree-id16 . -12)) nil (26042 16123 882757 823000) 0 nil])
([nil nil ((508 . 509)) nil (26042 16123 882744 721000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -274) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) 275 (269 . 275) (268 . 270) (#("(" 0 1 (face font-lock-builtin-face fontified nil)) . -268) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (263 . 269) (262 . 263) (t 26042 16123 881379 608000) 156) nil (26042 16200 650256 408000) 0 nil])
([nil nil ((#("print(Activ)
" 0 5 (face font-lock-builtin-face fontified t) 5 6 (face (rainbow-delimiters-depth-1-face) fontified t) 6 11 (fontified t) 11 12 (face (rainbow-delimiters-depth-1-face) fontified t) 12 13 (fontified t)) . 263) (undo-tree-id24 . 2) (undo-tree-id25 . -12) (undo-tree-id26 . -10) (undo-tree-id27 . -10) (undo-tree-id28 . 1) (undo-tree-id29 . 1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . 1) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . 1) (undo-tree-id38 . -3) (undo-tree-id39 . -3) (undo-tree-id40 . -3) (undo-tree-id41 . 1) (undo-tree-id42 . -4) (undo-tree-id43 . -4) (undo-tree-id44 . -4) (undo-tree-id45 . 1) (undo-tree-id46 . -5) (undo-tree-id47 . -5) (undo-tree-id48 . -5) (undo-tree-id49 . -13) (undo-tree-id50 . -13) (undo-tree-id51 . -13) (undo-tree-id52 . -13) (undo-tree-id53 . -13) (undo-tree-id54 . -13) (undo-tree-id55 . -5) (undo-tree-id56 . -5) (undo-tree-id57 . -5) (undo-tree-id58 . -5) (undo-tree-id59 . -5) (undo-tree-id60 . -5) (undo-tree-id61 . 1) (undo-tree-id62 . -5) (undo-tree-id63 . -5) (undo-tree-id64 . -5) (undo-tree-id65 . -5) (undo-tree-id66 . -5) (undo-tree-id67 . 1) (undo-tree-id68 . -5) (undo-tree-id69 . 1) (undo-tree-id70 . -5) (undo-tree-id71 . -6) (undo-tree-id72 . -6) (undo-tree-id73 . 1) (undo-tree-id74 . -6) (undo-tree-id75 . -6) (undo-tree-id76 . -6) (undo-tree-id77 . 2) (undo-tree-id78 . -7) (undo-tree-id79 . -7) (undo-tree-id80 . -7) (undo-tree-id81 . 2) (undo-tree-id82 . -8) (undo-tree-id83 . -8) (undo-tree-id84 . -8) (undo-tree-id85 . 2) (undo-tree-id86 . -9) (undo-tree-id87 . -9) (undo-tree-id88 . -9) (undo-tree-id89 . 2) (undo-tree-id90 . -10) (undo-tree-id91 . -10) (undo-tree-id92 . -10) (undo-tree-id93 . 2) (undo-tree-id94 . -11) (undo-tree-id95 . -11) (undo-tree-id96 . -11) (undo-tree-id97 . 2) (undo-tree-id98 . -11) (undo-tree-id99 . -13) (undo-tree-id100 . -13) (undo-tree-id101 . -13) (undo-tree-id102 . -13) (undo-tree-id103 . -13) (undo-tree-id104 . -13) (undo-tree-id105 . -11) (undo-tree-id106 . -11) (undo-tree-id107 . 2) (undo-tree-id108 . -11) (undo-tree-id109 . -11) (undo-tree-id110 . -10) (undo-tree-id111 . -10) (undo-tree-id112 . -10) (undo-tree-id113 . -10) (undo-tree-id114 . -10) (undo-tree-id115 . -10) (undo-tree-id116 . -13) 273) nil (26042 16200 650252 483000) 0 nil])
([nil nil ((225 . 227) (204 . 225)) nil (26042 16200 650172 563000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-string-face fontified t)) . 317) (t 26042 16200 650179 6000)) nil (26043 49964 830780 140000) 0 nil])
([nil nil ((#("2" 0 1 (face font-lock-string-face fontified t)) . 317)) nil (26043 49964 830779 134000) 0 nil])
([nil current ((367 . 368) (#("@" 0 1 (face font-lock-string-face fontified t)) . -367) (undo-tree-id0 . -1) 368 (366 . 368)) nil (26043 49964 830775 815000) 0 nil])
nil
