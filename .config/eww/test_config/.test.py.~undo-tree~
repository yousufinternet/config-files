(undo-tree-save-format-version . 1)
"6392a5517ae4ee847aae3f748267223aee43e712"
[nil nil nil nil (25583 63347 493006 240000) 0 nil]
([nil nil ((#("n" 0 1 (fontified t)) . -109) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) 110 (109 . 110) (#("'" 0 1 (fontified nil face font-lock-string-face syntax-table (15))) . 109) (undo-tree-id18 . -1) (undo-tree-id19 . 1) (108 . 109) (107 . 109) (#("'" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -107) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (107 . 108) (106 . 108) (#("(" 0 1 (fontified nil face font-lock-builtin-face)) . -106) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (104 . 107) (#("t" 0 1 (fontified t)) . -104) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 105 (101 . 105) (96 . 101) (t 25583 61967 26406 765000) 63) nil (25583 63347 493004 327000) 0 nil])
([nil nil ((108 . 110)) nil (25583 63347 492966 386000) 0 nil])
([nil nil ((24 . 34) (#("s" 0 1 (fontified t)) . -24) (undo-tree-id220 . -1) (#("y" 0 1 (fontified t)) . -25) (undo-tree-id221 . -1) (#("s" 0 1 (fontified t)) . -26) (undo-tree-id222 . -1) (#("." 0 1 (fontified t)) . -27) (undo-tree-id223 . -1) 28 (24 . 28) (24 . 25) (t 25583 63347 499761 10000)) nil (25583 63424 360998 353000) 0 nil])
([nil nil ((162 . 164) (#("(" 0 1 (fontified nil)) . -162) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (154 . 163) (146 . 154) (141 . 146) 133) nil (25583 63424 360995 171000) 0 nil])
([nil nil ((#("    sys.stdout.flush()
" 0 20 (fontified t) 20 21 (fontified t face (rainbow-delimiters-depth-1-face)) 21 22 (fontified t face (rainbow-delimiters-depth-1-face)) 22 23 (fontified t)) . 142) (undo-tree-id40 . -23) (undo-tree-id41 . -22) (undo-tree-id42 . -23) (undo-tree-id43 . 2) (undo-tree-id44 . -23) (undo-tree-id45 . -23) (undo-tree-id46 . -23) (undo-tree-id47 . -23) (undo-tree-id48 . -17) (undo-tree-id49 . -20) (undo-tree-id50 . 1) (undo-tree-id51 . 1) (undo-tree-id52 . -4) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . 1) (undo-tree-id60 . -5) (undo-tree-id61 . -5) (undo-tree-id62 . -5) (undo-tree-id63 . 1) (undo-tree-id64 . -6) (undo-tree-id65 . -6) (undo-tree-id66 . -6) (undo-tree-id67 . 1) (undo-tree-id68 . -7) (undo-tree-id69 . -7) (undo-tree-id70 . -7) (undo-tree-id71 . -7) (undo-tree-id72 . -7) (undo-tree-id73 . -7) (undo-tree-id74 . -7) (undo-tree-id75 . -7) (undo-tree-id76 . -7) (undo-tree-id77 . 1) (undo-tree-id78 . -8) (undo-tree-id79 . -8) (undo-tree-id80 . -8) (undo-tree-id81 . -8) (undo-tree-id82 . -8) (undo-tree-id83 . -8) (undo-tree-id84 . -8) (undo-tree-id85 . -8) (undo-tree-id86 . -8) (undo-tree-id87 . -8) (undo-tree-id88 . -8) (undo-tree-id89 . -8) (undo-tree-id90 . -8) (undo-tree-id91 . -8) (undo-tree-id92 . -8) (undo-tree-id93 . 1) (undo-tree-id94 . -9) (undo-tree-id95 . -9) (undo-tree-id96 . -9) (undo-tree-id97 . -9) (undo-tree-id98 . -4) (undo-tree-id99 . -9) (undo-tree-id100 . -4) (undo-tree-id101 . -9) (undo-tree-id102 . -9) (undo-tree-id103 . -9) (undo-tree-id104 . -9) (undo-tree-id105 . 1) (undo-tree-id106 . -10) (undo-tree-id107 . -10) (undo-tree-id108 . -10) (undo-tree-id109 . 1) (undo-tree-id110 . -11) (undo-tree-id111 . -11) (undo-tree-id112 . -11) (undo-tree-id113 . 1) (undo-tree-id114 . -12) (undo-tree-id115 . -12) (undo-tree-id116 . -12) (undo-tree-id117 . -12) (undo-tree-id118 . -12) (undo-tree-id119 . -12) (undo-tree-id120 . -12) (undo-tree-id121 . -4) (undo-tree-id122 . -12) (undo-tree-id123 . -4) (undo-tree-id124 . -12) (undo-tree-id125 . -12) (undo-tree-id126 . -12) (undo-tree-id127 . -12) (undo-tree-id128 . 1) (undo-tree-id129 . -13) (undo-tree-id130 . -13) (undo-tree-id131 . -13) (undo-tree-id132 . -13) (undo-tree-id133 . -13) (undo-tree-id134 . -13) (undo-tree-id135 . 1) (undo-tree-id136 . -14) (undo-tree-id137 . -14) (undo-tree-id138 . -14) (undo-tree-id139 . -14) (undo-tree-id140 . -14) (undo-tree-id141 . 1) (undo-tree-id142 . -15) (undo-tree-id143 . -15) (undo-tree-id144 . -15) (undo-tree-id145 . -15) (undo-tree-id146 . -15) (undo-tree-id147 . 1) (undo-tree-id148 . -16) (undo-tree-id149 . -16) (undo-tree-id150 . -16) (undo-tree-id151 . -16) (undo-tree-id152 . 1) (undo-tree-id153 . -17) (undo-tree-id154 . -17) (undo-tree-id155 . -17) (undo-tree-id156 . -17) (undo-tree-id157 . -17) (undo-tree-id158 . -17) (undo-tree-id159 . 1) (undo-tree-id160 . -18) (undo-tree-id161 . -18) (undo-tree-id162 . -18) (undo-tree-id163 . 1) (undo-tree-id164 . -19) (undo-tree-id165 . -19) (undo-tree-id166 . -19) (undo-tree-id167 . -19) (undo-tree-id168 . 1) (undo-tree-id169 . -20) (undo-tree-id170 . -20) (undo-tree-id171 . -20) (undo-tree-id172 . -20) (undo-tree-id173 . -20) (undo-tree-id174 . -20) (undo-tree-id175 . -20) (undo-tree-id176 . -20) (undo-tree-id177 . -20) (undo-tree-id178 . -20) (undo-tree-id179 . -4) (undo-tree-id180 . -20) (undo-tree-id181 . -4) (undo-tree-id182 . -20) (undo-tree-id183 . -20) (undo-tree-id184 . -20) (undo-tree-id185 . -20) (undo-tree-id186 . 1) (undo-tree-id187 . -20) (undo-tree-id188 . -20) (undo-tree-id189 . -20) (undo-tree-id190 . -20) (undo-tree-id191 . -20) (undo-tree-id192 . 1) (undo-tree-id193 . -20) (undo-tree-id194 . 1) (undo-tree-id195 . -20) (undo-tree-id196 . -21) (undo-tree-id197 . -21) (undo-tree-id198 . 1) (undo-tree-id199 . -21) (undo-tree-id200 . -21) (undo-tree-id201 . -20) (undo-tree-id202 . -20) (undo-tree-id203 . -20) (undo-tree-id204 . -20) (undo-tree-id205 . 3) (undo-tree-id206 . -21) (undo-tree-id207 . 2) (undo-tree-id208 . -22) (undo-tree-id209 . -20) (undo-tree-id210 . -20) (undo-tree-id211 . -20) (undo-tree-id212 . -20) (undo-tree-id213 . -20) (undo-tree-id214 . -20) (undo-tree-id215 . -20) (undo-tree-id216 . -20) (undo-tree-id217 . -23) 162) nil (25583 63424 360989 675000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -124) (undo-tree-id28 . -4) (undo-tree-id29 . -4) (undo-tree-id30 . -4) (undo-tree-id31 . -4) (undo-tree-id32 . -4) (undo-tree-id33 . -4) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (undo-tree-id36 . -4) (undo-tree-id37 . -4) (undo-tree-id38 . -4) (undo-tree-id39 . -4) 128 (124 . 128) (124 . 125)) nil (25583 63424 360354 387000) 0 nil])
([nil nil ((nil rear-nonsticky nil 128 . 129) (#("
" 0 1 (fontified nil)) . -147) (124 . 148)) nil (25583 63424 360340 384000) 0 nil])
([nil nil ((apply -2 125 168 undo--wrap-and-run-primitive-undo 125 168 ((129 . 131)))) nil (25583 63424 360336 846000) 0 nil])
([nil nil ((apply 2 125 148 undo--wrap-and-run-primitive-undo 125 148 ((#("# " 0 2 (fontified t face font-lock-comment-delimiter-face)) . -129))) (t 25583 63424 363095 510000)) nil (25583 63490 300411 347000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 124) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1)) nil (25583 63490 300410 366000) 0 nil])
([nil current ((#("    print('\\n')
" 0 4 (fontified t) 4 9 (fontified t face font-lock-builtin-face) 9 10 (fontified t face (rainbow-delimiters-depth-1-face)) 10 14 (fontified t face font-lock-string-face) 14 15 (fontified t face (rainbow-delimiters-depth-1-face)) 15 16 (fontified t)) . 108) (undo-tree-id224 . -16) (undo-tree-id225 . -15) (undo-tree-id226 . -16) (undo-tree-id227 . -16) (undo-tree-id228 . -16) (undo-tree-id229 . -16) (undo-tree-id230 . -16) (undo-tree-id231 . -16) (undo-tree-id232 . -16) (undo-tree-id233 . -16) (undo-tree-id234 . -16) (undo-tree-id235 . -16) (undo-tree-id236 . -16)) nil (25583 63490 300405 875000) 0 nil])
nil
