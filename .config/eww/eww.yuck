(defwindow powermenu
  :stacking "fg"
  :windowtype "normal"
  :wn-ignore true
  :geometry (geometry :width "100%" :height "100%")
  (powermenu_layout)
  )

(defwindow welcome
  :stacking "fg"
  :windowtype "normal"
  :geometry (geometry :width "33%" :height "33%")
  :anchor "center"
  (welcome_menu)
  )

(defwidget welcome_menu []
  (box :orientation "vertical" :class "bx"
(button :onclick "notify-send left" :onrightclick "notify-send right" "button1")
(button :onclick "notify-send left" :onrightclick "notify-send right" "button2")
EWW_BATTERY
       )
  )

(defpoll time :interval "5s"
  :initial `date +'{"hour":"%H","min":"%M"}'`
  `date +'{"hour":"%H","min":"%M"}'`)
(defpoll net :interval "100s"
  :initial `N/A`
  `nmcli -t -f SIGNAL,ACTIVE device wifi \
    | awk -F':' '{if($2=="yes")print$1}'`)

(defwidget _buttons [shutdown shutdown_icon reboot reboot_icon logout logout_icon]
  (box :class "btns-box" :spacing 5 :vexpand true :hexpand true :valign "end" :halign "end"
       :spaceevenly false
       (button :onclick shutdown shutdown_icon)
       (button :onclick reboot reboot_icon)
       (button :onclick logout logout_icon)
       )
  )

(defwidget _network [strength offline excellent good okay slow]
  (box :class "net-box" :space-evenly false :spacing 8
       (label :text {strength == "" ? offline : strength < 26 ? slow : strength < 51 ? okay : strength < 76 ? good : excellent})
       )
  )

(defwidget _battery [battery status one two three four five six seven charge]
  (box :class "bat-box" :space-evenly false :spacing 8
       (label :text {status == 'Charging' ? charge : battery < 15 ? seven :
			    battery < 30 ? six :
			    battery < 45 ? five :
			    battery < 60 ? four :
			    battery < 75 ? three :
			    battery < 95 ? two : one})
       )
  )

(defwidget powermenu_layout []
  (box :class "layout-box" :space-evenly false :orientation "vertical" :style "background-image: url(./wallpaper)"
       (box :valign "start" :space-evenly false :spacing 25
	    (_battery :status {EWW_BATTERY.BAT1.status}
		      :battery {EWW_BATTERY.BAT1.capacity}
		      :charge "" :one "" :two "" :three "" :four ""
                      :five "" :six "" :seven ""
		      )
  (_network :strength net :offline "" :excellent "" :good ""
                :okay "" :slow "")
      (label :text "|" :class "sep")
      (button :onclick "eww close powermenu" :class "close-btn" ""))
	    
(box :space-evenly false :hexpand true :vexpand true
      (box :spacing 15 :class "tm-box" :space-evenly false
            :valign "end" :halign "start"
        (label :text "")
        (label :text "${time.hour}  ${time.min}"))
      (_buttons :shutdown "poweroff" :reboot "reboot"
                :logout "loginctl kill-session self"
                :shutdown_icon "" :reboot_icon ""
                :logout_icon ""))))
       
(include "polls_listeners.yuck")

(defvar daterevealed false)
(defvar sysstats_exp false)

(defwidget _datetime []
  (eventbox :onhover `eww update daterevealed=true` :onhoverlost `eww update daterevealed=false` (box :orientation "h" :space-evenly false :spacing 5 
       (label :class "orange-icon" :text "") (revealer :reveal daterevealed :transition "slideright" _date) (label :style "min-width: 45px" :text _time) (label :class "icon" :vexpand false :hexpand false :text ""))))

(defwindow top_bar :monitor 1 :geometry (geometry :width "90%" :height "20px" :y "3px" :anchor "top center") :stacking "bg" :reserve (struts :distance "30px" :side "top") :wmignore false :hexpand false :vexpand true (bar_content))

(defwidget bar_content [] (centerbox :orientation "horizontal" :hexpand false :class "main_container" (left) (center) (right)))

(defwidget _workspace []
  (box :class "icon" (for entry in workspaces_json (button :onclick `herbstclient use_index "${entry.ws_no}"` :style "padding: 2px; border-radius: 2px; font-family: 'Font Awesome 6 Free'; ${entry.ws_style}" "${entry.ws_icn}"))))

(defwidget _sysstats [] (eventbox :onclick `eww update sysstats_exp=true` :onhoverlost `eww update sysstats_exp=false` (box :space-evenly false :spacing 5 (literal :content _cpuusage) (revealer :transition "slideleft" :vexpand true :hexpand true :halign "end" :reveal sysstats_exp (box :vexpand true :space-evenly false :spacing 5 (literal :content _cputemp) (literal :content _gputemp))))))

(defvar weather_revealed false)

(defwidget _weatherwdgt [] (eventbox :onhover `eww update weather_revealed=true` :onhoverlost `eww update weather_revealed=false` (box :space-evenly false :spacing 5 (label :class "blue-icon" :text {_weather["icon"]}) {_weather["temp"]} "℃" (revealer :reveal weather_revealed :transition "slideleft" (label :class "dimmed" :text {_weather["last_updated"]})))))

(defwidget _keyboard [] (eventbox :style "min-width: 40px" :onclick `xkb-switch -n` (box :space-evenly false :spacing 5 (label :class "icon" :text "\\uf11c") {captures(klayout, "(\\w+)")[0][0]})))

(defwidget left []
 (box :style "border 2px solid white" :orientation "h" :space-evenly false :spacing 10 (_workspace) (_weatherwdgt)))

(defwidget right [] (box :style "border 2px solid white" :orientation "h" :halign "end" :space-evenly false :spacing 10 (_keyboard) (_sysstats) (_datetime)))

(defwidget center [] (box :orientation "h" :style "border 2px solid white" :space-evenly false :hexpand false (label :text "Work in progress, please be patient")))
