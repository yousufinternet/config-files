(undo-tree-save-format-version . 1)
"f084a34d0fab20bf862367e8935e3dff6aaccb9f"
[nil nil nil nil (25590 17134 460156 370000) 0 nil]
([nil nil ((1 . 23) (t . -1)) nil (25590 17134 460155 469000) 0 nil])
([nil nil ((23 . 24) (22 . 23) 21) nil (25590 17134 460154 816000) 0 nil])
([nil nil ((nil rear-nonsticky nil 24 . 25) (#("
" 0 1 (fontified nil)) . -748) (24 . 749)) nil (25590 17134 460154 11000) 0 nil])
([nil nil ((44 . 47) (24 . 44) (23 . 24) 23) nil (25590 17134 460153 190000) 0 nil])
([nil nil ((apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 405 408 nil nil nil nil #s(yas--exit 409 nil))) #s(yas--exit 409 nil) 0 nil #s(yas--field 1 405 408 nil nil nil nil #s(yas--exit 409 nil)) nil nil)) (395 . 409) (#("getoutput" 0 9 (fontified nil)) . -395) (395 . 404) (#("getout" 0 6 (fontified t)) . -395) (undo-tree-id32 . -6) (undo-tree-id33 . -6) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -3) (undo-tree-id50 . -3) (undo-tree-id51 . -3) (undo-tree-id52 . -4) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (undo-tree-id58 . -4) (undo-tree-id59 . -4) (undo-tree-id60 . -4) (undo-tree-id61 . -5) (undo-tree-id62 . -5) (undo-tree-id63 . -5) (undo-tree-id64 . -5) (undo-tree-id65 . -5) (undo-tree-id66 . -5) (undo-tree-id67 . -5) (undo-tree-id68 . -5) (undo-tree-id69 . -5) (undo-tree-id70 . -6) (undo-tree-id71 . -6) (undo-tree-id72 . -6) (undo-tree-id73 . -6) (undo-tree-id74 . -6) (undo-tree-id75 . -6) (undo-tree-id76 . -6) 401 (391 . 401) (#(" cmdout" 0 7 (fontified t)) . 391) (undo-tree-id77 . -4) (undo-tree-id78 . -6) (undo-tree-id79 . -4) (undo-tree-id80 . -4) (undo-tree-id81 . -4) (undo-tree-id82 . -4) (undo-tree-id83 . -7) (undo-tree-id84 . -7) 395) nil (25590 17134 460151 630000) 0 nil])
([nil nil ((apply yas--snippet-revive 395 409 #s(yas--snippet nil (#s(yas--field 1 405 408 nil nil nil nil #s(yas--exit 409 nil))) #s(yas--exit 409 nil) 0 nil #s(yas--field 1 405 408 nil nil nil nil #s(yas--exit 409 nil)) nil nil))) nil (25590 17134 460123 600000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 404) (undo-tree-id26 . 1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1)) nil (25590 17134 460123 42000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 404) (undo-tree-id22 . 1) (undo-tree-id23 . 1) (undo-tree-id24 . -1) (undo-tree-id25 . -1)) nil (25590 17134 460119 615000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . 404) (undo-tree-id17 . 1) (undo-tree-id18 . 1) (undo-tree-id19 . 1) (undo-tree-id20 . -1) (undo-tree-id21 . -1)) nil (25590 17134 460117 257000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t)) . 404) (undo-tree-id11 . 1) (undo-tree-id12 . 1) (undo-tree-id13 . 1) (undo-tree-id14 . 1) (undo-tree-id15 . -1) (undo-tree-id16 . -1)) nil (25590 17134 460113 931000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-unmatched-face))) . 404) (undo-tree-id0 . 1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . 1) (undo-tree-id4 . 1) (undo-tree-id5 . 1) (undo-tree-id6 . 1) (undo-tree-id7 . 1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1)) nil (25590 17134 460108 867000) 0 nil])
([nil nil ((801 . 803) (#("(" 0 1 (fontified nil)) . -801) (801 . 802) (#(" " 0 1 (fontified t)) . -801) (undo-tree-id192 . -1) 802 (790 . 802) (780 . 790) (#("f" 0 1 (fontified t)) . -780) (undo-tree-id193 . -1) (#("o" 0 1 (fontified t)) . -781) (undo-tree-id194 . -1) (#("r" 0 1 (fontified t face font-lock-keyword-face)) . -782) (undo-tree-id195 . -1) (#(" " 0 1 (fontified t)) . -783) (undo-tree-id196 . -1) 784 (780 . 784) (779 . 780) (t 25590 17134 466046 684000) 779) nil (25590 18355 941901 478000) 0 nil])
([nil nil ((809 . 811) (#("(" 0 1 (fontified nil face font-lock-builtin-face)) . -809) (804 . 810) (#("p" 0 1 (fontified t)) . -804) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (#("r" 0 1 (fontified t)) . -805) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (#("i" 0 1 (fontified t)) . -806) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (#("n" 0 1 (fontified t)) . -807) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (#("t" 0 1 (fontified t face font-lock-builtin-face)) . -808) (undo-tree-id190 . -1) (undo-tree-id191 . -1) 809 (804 . 809) (803 . 804) 801) nil (25590 18355 941895 891000) 0 nil])
([nil nil ((810 . 812) (#("'" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -810) (810 . 811)) nil (25590 18355 941887 907000) 0 nil])
([nil nil ((nil rear-nonsticky nil 816 . 817) (nil fontified nil 811 . 817) (811 . 817) 810) nil (25590 18355 941886 916000) 0 nil])
([nil nil ((817 . 818)) nil (25590 18355 941885 856000) 0 nil])
([nil nil ((818 . 819) (811 . 812) 816) nil (25590 18355 941885 241000) 0 nil])
([nil nil ((812 . 816)) nil (25590 18355 941884 343000) 0 nil])
([nil nil ((823 . 824) (816 . 817) 821) nil (25590 18355 941883 398000) 0 nil])
([nil nil ((816 . 830)) nil (25590 18355 941882 514000) 0 nil])
([nil nil ((830 . 836)) nil (25590 18355 941881 789000) 0 nil])
([nil nil ((846 . 855) (845 . 847) (#("(" 0 1 (fontified nil face font-lock-string-face)) . -845) (845 . 846) (844 . 845)) nil (25590 18355 941881 5000) 0 nil])
([nil nil ((868 . 875) (855 . 868)) nil (25590 18355 941879 826000) 0 nil])
([nil nil ((889 . 894) (877 . 889) (876 . 878) (#("(" 0 1 (fontified nil face font-lock-string-face)) . -876) (875 . 877)) nil (25590 18355 941878 914000) 0 nil])
([nil nil ((845 . 846) (841 . 845) (#("e" 0 1 (fontified t face font-lock-string-face)) . -841) (undo-tree-id181 . -1) 842 (835 . 842)) nil (25590 18355 941877 177000) 0 nil])
([nil nil ((906 . 923) (#(":" 0 1 (fontified t face font-lock-string-face)) . -906) (undo-tree-id180 . -1) 907 (905 . 907)) nil (25590 18355 941875 386000) 0 nil])
([nil nil ((908 . 911) (887 . 908)) nil (25590 18355 941873 849000) 0 nil])
([nil nil ((819 . 820) (818 . 820) (#("'" 0 1 (fontified nil)) . -818) (804 . 819) (803 . 804) 802) nil (25590 18355 941872 956000) 0 nil])
([nil nil ((826 . 828) (#("(" 0 1 (fontified nil)) . -826) (822 . 827) (821 . 822)) nil (25590 18355 941871 487000) 0 nil])
([nil nil ((842 . 857) (#(":" 0 1 (fontified t face font-lock-string-face)) . -842) (undo-tree-id174 . -1) 843 (836 . 843) (829 . 836) (828 . 830) (#("(" 0 1 (fontified nil face font-lock-string-face)) . -828) (828 . 829) (827 . 829) (#("'" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -827) (827 . 828) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -827) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 828) (#("(" 0 1 (fontified nil face font-lock-string-face)) . -828) (undo-tree-id177 . -1) (#(")" 0 1 (fontified t face font-lock-string-face)) . 829) (828 . 830) (#("(" 0 1 (fontified nil face font-lock-string-face)) . -828) (828 . 829) (827 . 829) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -827) (827 . 828) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -827) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 828) (827 . 829) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -827) (827 . 828)) nil (25590 18355 941869 311000) 0 nil])
([nil nil ((905 . 907) (#("\"" 0 1 (fontified nil face font-lock-string-face syntax-table (15))) . 906) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . 1) (undo-tree-id141 . 1) (undo-tree-id142 . 1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . 1) (undo-tree-id149 . 1) (undo-tree-id150 . 1) (undo-tree-id151 . 1) (undo-tree-id152 . 1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . 1) (undo-tree-id160 . 1) (905 . 906) (#(" " 0 1 (fontified nil)) . -905) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (905 . 906) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -905) (undo-tree-id167 . -1) (904 . 906) (#(" " 0 1 (fontified nil)) . -904) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (904 . 905) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -904) (undo-tree-id173 . -1) (904 . 905)) nil (25590 18355 941862 537000) 0 nil])
([nil nil ((nil rear-nonsticky nil 910 . 911) (nil fontified nil 907 . 911) (907 . 911) 906) nil (25590 18355 941739 987000) 0 nil])
([nil nil ((#("\\uf0a0\"" 0 5 (fontified t face font-lock-string-face) 5 6 (rear-nonsticky t fontified t face font-lock-string-face) 6 7 (fontified t face font-lock-string-face)) . 912) (undo-tree-id97 . 7) (undo-tree-id98 . -6) (undo-tree-id99 . 6) (undo-tree-id100 . -5) (undo-tree-id101 . -6) (undo-tree-id102 . -6) (undo-tree-id103 . -6) (undo-tree-id104 . -6) (undo-tree-id105 . -7) (undo-tree-id106 . -7) (undo-tree-id107 . -7) (undo-tree-id108 . -7) (undo-tree-id109 . -7) (undo-tree-id110 . -7) (undo-tree-id111 . -6) (undo-tree-id112 . -6) (undo-tree-id113 . -5) (undo-tree-id114 . -5) (undo-tree-id115 . -4) (undo-tree-id116 . -4) (undo-tree-id117 . -4) (undo-tree-id118 . -3) (undo-tree-id119 . -3) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . 7) (undo-tree-id125 . 7) (undo-tree-id126 . 7) (undo-tree-id127 . -6) (undo-tree-id128 . -7) (undo-tree-id129 . 7) (undo-tree-id130 . 7) (undo-tree-id131 . 7) (undo-tree-id132 . 7) (undo-tree-id133 . 7) (undo-tree-id134 . 7) (undo-tree-id135 . 7) (undo-tree-id136 . 7) (undo-tree-id137 . -7)) nil (25590 18355 941738 484000) 0 nil])
([nil nil ((913 . 914) (904 . 905)) nil (25590 18355 941714 415000) 0 nil])
([nil nil ((928 . 932) (#("s" 0 1 (fontified t face font-lock-string-face)) . -928) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) 929 (926 . 929) (924 . 926) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 924) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (923 . 924) (#(" " 0 1 (fontified nil)) . -923) (923 . 924) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -923) (918 . 924) (#(" " 0 1 (fontified nil)) . -918) (918 . 919) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -918) (905 . 919)) nil (25590 18355 941712 573000) 0 nil])
([nil nil ((1038 . 1039)) nil (25590 18355 941691 37000) 0 nil])
([nil nil ((827 . 828) (t 25590 18355 949397 885000)) nil (25590 32163 560047 296000) 0 nil])
([nil nil ((857 . 859) (#("{" 0 1 (fontified nil face font-lock-string-face)) . -857) (857 . 858)) nil (25590 32163 560046 504000) 0 nil])
([nil nil ((858 . 860)) nil (25590 32163 560045 671000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face nil)) . -859) (undo-tree-id396 . -1) (#("e" 0 1 (fontified t face nil)) . -860) (undo-tree-id397 . -1) (#("v" 0 1 (fontified t face nil)) . -861) (undo-tree-id398 . -1) (#("i" 0 1 (fontified t face nil)) . -862) (undo-tree-id399 . -1) (#("c" 0 1 (fontified t face nil)) . -863) (undo-tree-id400 . -1) (#("e" 0 1 (fontified t face nil)) . -864) (undo-tree-id401 . -1) (#("-" 0 1 (fontified t face nil)) . -865) (undo-tree-id402 . -1) (#("u" 0 1 (fontified t face nil)) . -866) (undo-tree-id403 . -1) (#("s" 0 1 (fontified t face nil)) . -867) (undo-tree-id404 . -1) (#("b" 0 1 (fontified t face nil)) . -868) (undo-tree-id405 . -1) 869 (859 . 869)) nil (25590 32163 560043 883000) 0 nil])
([nil nil ((859 . 861)) nil (25590 32163 560036 946000) 0 nil])
([nil nil ((nil rear-nonsticky nil 864 . 865) (nil fontified nil 861 . 865) (861 . 865) 860) nil (25590 32163 560036 287000) 0 nil])
([nil nil ((866 . 870)) nil (25590 32163 560035 393000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t face nil)) . -859) (undo-tree-id395 . -1) 860 (859 . 860)) nil (25590 32163 560034 731000) 0 nil])
([nil nil ((#("\"\\uf8e9\" if " 0 3 (fontified t face nil) 3 6 (fontified t face nil) 6 7 (fontified t rear-nonsticky t face nil) 7 9 (fontified t face nil) 9 11 (fontified t face font-lock-keyword-face) 11 12 (fontified t face nil)) . 858) (undo-tree-id390 . 11) (undo-tree-id391 . -3) (undo-tree-id392 . -11) (undo-tree-id393 . -1) (undo-tree-id394 . -3)) nil (25590 32163 560033 266000) 0 nil])
([nil nil ((857 . 859)) nil (25590 32163 560029 994000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t face nil)) . 859) (undo-tree-id384 . 1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . 1) (undo-tree-id389 . -1)) nil (25590 32163 560029 239000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face font-lock-string-face)) . 859) (undo-tree-id381 . 1) (undo-tree-id382 . 1) (undo-tree-id383 . -1)) nil (25590 32163 560025 739000) 0 nil])
([nil nil ((860 . 861)) nil (25590 32163 560023 897000) 0 nil])
([nil nil ((858 . 860)) nil (25590 32163 560023 448000) 0 nil])
([nil nil ((nil rear-nonsticky nil 859 . 860) (nil fontified nil 859 . 860) (859 . 860)) nil (25590 32163 560022 815000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t rear-nonsticky t face font-lock-string-face)) . 859) (undo-tree-id379 . 1) (undo-tree-id380 . -1)) nil (25590 32163 560021 890000) 0 nil])
([nil nil ((860 . 861) (859 . 860)) nil (25590 32163 560020 126000) 0 nil])
([nil nil ((nil rear-nonsticky nil 864 . 865) (nil fontified nil 861 . 865) (861 . 865) 860) nil (25590 32163 560019 349000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-string-face)) . -870) (undo-tree-id370 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -871) (undo-tree-id371 . -1) (#("v" 0 1 (fontified t face font-lock-string-face)) . -872) (undo-tree-id372 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -873) (undo-tree-id373 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -874) (undo-tree-id374 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -875) (undo-tree-id375 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -876) (undo-tree-id376 . -1) 877 (876 . 877) (#("r" 0 1 (fontified t face font-lock-string-face)) . -876) (undo-tree-id377 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -877) (undo-tree-id378 . -1) 878 (866 . 878)) nil (25590 32163 560017 620000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . 856) (undo-tree-id368 . -1) (undo-tree-id369 . -1)) nil (25590 32163 560005 777000) 0 nil])
([nil nil ((856 . 857) (856 . 857)) nil (25590 32163 560004 204000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t face font-lock-string-face)) . 856)) nil (25590 32163 560003 443000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . 827)) nil (25590 32163 560002 842000) 0 nil])
([nil nil ((872 . 885) (871 . 873) (#("'" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -871) (871 . 872) (870 . 872) (#("[" 0 1 (fontified nil)) . -870) (869 . 871)) nil (25590 32163 560001 771000) 0 nil])
([nil nil ((887 . 893)) nil (25590 32163 560000 605000) 0 nil])
([nil nil ((893 . 895) (#("\"" 0 1 (fontified nil)) . -893) (893 . 894)) nil (25590 32163 559999 890000) 0 nil])
([nil nil ((894 . 896)) nil (25590 32163 559999 76000) 0 nil])
([nil nil ((nil rear-nonsticky nil 899 . 900) (nil fontified nil 896 . 900) (896 . 900) 895) nil (25590 32163 559998 384000) 0 nil])
([nil nil ((901 . 905)) nil (25590 32163 559997 416000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . 909)) nil (25590 32163 559996 452000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-unmatched-face))) . 909) (undo-tree-id366 . 1) (undo-tree-id367 . -1)) nil (25590 32163 559995 752000) 0 nil])
([nil nil ((910 . 921) (908 . 910) (907 . 909) (#("\"" 0 1 (fontified nil face (rainbow-delimiters-depth-2-face))) . -907) (907 . 908) (#("i" 0 1 (fontified t)) . -907) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (#("s" 0 1 (fontified t face font-lock-keyword-face)) . -908) (undo-tree-id364 . -1) (undo-tree-id365 . -1) 909 (907 . 909) (906 . 908) (#("[" 0 1 (fontified nil)) . -906) (905 . 907)) nil (25590 32163 559993 733000) 0 nil])
([nil nil ((866 . 867) (857 . 858) 864) nil (25590 32163 559989 761000) 0 nil])
([nil nil ((859 . 860)) nil (25590 32163 559988 714000) 0 nil])
([nil nil ((857 . 858)) nil (25590 32163 559988 148000) 0 nil])
([nil nil ((906 . 907) (897 . 898) 904) nil (25590 32163 559987 329000) 0 nil])
([nil nil ((897 . 898)) nil (25590 32163 559986 539000) 0 nil])
([nil nil ((900 . 901)) nil (25590 32163 559985 931000) 0 nil])
([nil nil ((931 . 937)) nil (25590 32163 559985 332000) 0 nil])
([nil nil ((#("if v[\"is_filesystem\"] else " 0 2 (fontified t face font-lock-keyword-face) 2 4 (fontified t) 4 5 (fontified t face (rainbow-delimiters-depth-2-face)) 5 19 (fontified t face font-lock-string-face) 19 20 (fontified t face font-lock-string-face) 20 21 (fontified t face (rainbow-delimiters-depth-2-face)) 21 22 (fontified t) 22 26 (fontified t face font-lock-keyword-face) 26 27 (fontified t)) . 910) (undo-tree-id286 . -26) (undo-tree-id287 . -26) (undo-tree-id288 . -26) (undo-tree-id289 . -6) (undo-tree-id290 . -26) (undo-tree-id291 . -21) (undo-tree-id292 . -21) (undo-tree-id293 . -20) (undo-tree-id294 . -20) (undo-tree-id295 . -21) (undo-tree-id296 . -21) (undo-tree-id297 . -21) (undo-tree-id298 . -21) (undo-tree-id299 . -22) (undo-tree-id300 . -22) (undo-tree-id301 . -22) (undo-tree-id302 . -23) (undo-tree-id303 . -23) (undo-tree-id304 . -23) (undo-tree-id305 . -24) (undo-tree-id306 . -24) (undo-tree-id307 . -24) (undo-tree-id308 . -25) (undo-tree-id309 . -25) (undo-tree-id310 . -25) (undo-tree-id311 . -26) (undo-tree-id312 . -26) (undo-tree-id313 . -26) (undo-tree-id314 . -27) (undo-tree-id315 . -27) (undo-tree-id316 . -27) (undo-tree-id317 . -27) (undo-tree-id318 . -27) (undo-tree-id319 . -27) (undo-tree-id320 . -27) (undo-tree-id321 . -27) (undo-tree-id322 . -27) (undo-tree-id323 . -27) (undo-tree-id324 . -27) (undo-tree-id325 . -26) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -2) (undo-tree-id329 . -2) (undo-tree-id330 . -3) (undo-tree-id331 . -3) (undo-tree-id332 . -5) (undo-tree-id333 . -5) (undo-tree-id334 . -6) (undo-tree-id335 . -6) (undo-tree-id336 . -7) (undo-tree-id337 . -7) (undo-tree-id338 . -8) (undo-tree-id339 . -8) (undo-tree-id340 . -9) (undo-tree-id341 . -9) (undo-tree-id342 . -18) (undo-tree-id343 . -18) (undo-tree-id344 . -19) (undo-tree-id345 . -19) (undo-tree-id346 . -20) (undo-tree-id347 . -20) (undo-tree-id348 . -21) (undo-tree-id349 . -21) (undo-tree-id350 . -22) (undo-tree-id351 . -22) (undo-tree-id352 . -23) (undo-tree-id353 . -23) (undo-tree-id354 . -24) (undo-tree-id355 . -24) (undo-tree-id356 . -25) (undo-tree-id357 . -25) (undo-tree-id358 . -26) (undo-tree-id359 . -26) (undo-tree-id360 . -26) (undo-tree-id361 . -27) 936) nil (25590 32163 559983 401000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 909) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1)) nil (25590 32163 559489 502000) 0 nil])
([nil nil ((911 . 912)) nil (25590 32163 559421 190000) 0 nil])
([nil nil ((927 . 930) (913 . 927)) nil (25590 32163 559420 189000) 0 nil])
([nil nil ((1103 . 1105) (#("{" 0 1 (fontified nil face font-lock-string-face)) . -1103) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (1103 . 1104)) nil (25590 32163 559419 146000) 0 nil])
([nil nil ((1104 . 1115)) nil (25590 32163 559411 282000) 0 nil])
([nil nil ((938 . 939)) nil (25590 32163 559408 14000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-string-face)) . 1120) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (t 25590 32163 562945 815000)) nil (25590 32189 548842 204000) 0 nil])
([nil nil ((989 . 999) (979 . 989) (#("B" 0 1 (fontified t face font-lock-string-face)) . -979) (undo-tree-id410 . -1) (#("N" 0 1 (fontified t face font-lock-string-face)) . -980) (undo-tree-id411 . -1) 981 (979 . 981) (978 . 980) (#("\"" 0 1 (fontified nil)) . -978) (972 . 979) (961 . 972) (#("devices" 0 7 (fontified t)) . -961) (undo-tree-id412 . -7) (undo-tree-id413 . -7) 968 (967 . 968) (946 . 967) (#("'" 0 1 (fontified nil face font-lock-string-face)) . -946) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (#("'" 0 1 (fontified t face font-lock-string-face)) . 947) (946 . 948) (#("'" 0 1 (fontified nil)) . -946) (946 . 947) (#("i" 0 1 (fontified t)) . -946) (undo-tree-id416 . -1) (#("f" 0 1 (fontified t face font-lock-keyword-face)) . -947) (undo-tree-id417 . -1) (#(" " 0 1 (fontified t)) . -948) (undo-tree-id418 . -1) 949 (932 . 949) (931 . 932) (t 25590 32189 552946 187000) 930) nil (25590 32311 565454 449000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified nil face font-lock-string-face)) . 914) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . 1) (undo-tree-id443 . 1) (undo-tree-id444 . 1) (undo-tree-id445 . 1) (undo-tree-id446 . -1) (undo-tree-id447 . 1) (undo-tree-id448 . 1) (913 . 914) (#(" " 0 1 (fontified nil)) . -913) (undo-tree-id449 . -1) (913 . 914) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -913) (undo-tree-id450 . -1) (912 . 914) (t 25590 32311 569614 583000)) nil (25590 32364 736655 985000) 0 nil])
([nil nil ((913 . 914) (910 . 911) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 912) (undo-tree-id421 . 1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . 1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . 910) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) 912) nil (25590 32364 736647 866000) 0 nil])
([nil nil ((914 . 919) (913 . 915) (#("(" 0 1 (fontified nil face font-lock-string-face)) . -913) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (913 . 914)) nil (25590 32364 736601 955000) 0 nil])
([nil nil ((1181 . 1190) (1180 . 1181)) nil (25590 32364 736594 330000) 0 nil])
([nil nil ((1189 . 1198)) nil (25590 32364 736590 997000) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil face font-lock-string-face)) . -913) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (#(")" 0 1 (fontified t face font-lock-string-face)) . 914) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . 1) (undo-tree-id584 . 1) (undo-tree-id585 . 1) (undo-tree-id586 . 1) (undo-tree-id587 . 1) (undo-tree-id588 . 1) (undo-tree-id589 . 1) (undo-tree-id590 . 1) (undo-tree-id591 . 1) (undo-tree-id592 . 1) (undo-tree-id593 . 1) (undo-tree-id594 . 1) (undo-tree-id595 . 1) (undo-tree-id596 . 1) (undo-tree-id597 . 1) (undo-tree-id598 . 1) (undo-tree-id599 . 1) (undo-tree-id600 . 1) (undo-tree-id601 . 1) (undo-tree-id602 . 1) (undo-tree-id603 . 1) (undo-tree-id604 . 1) (undo-tree-id605 . 1) (undo-tree-id606 . 1) (undo-tree-id607 . 1) (undo-tree-id608 . 1) (undo-tree-id609 . 1) (undo-tree-id610 . 1) (undo-tree-id611 . 1) (undo-tree-id612 . 1) (undo-tree-id613 . 1) (undo-tree-id614 . 1) (undo-tree-id615 . 1) (undo-tree-id616 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -914) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -915) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (#("b" 0 1 (fontified t face font-lock-string-face)) . -916) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) (undo-tree-id844 . -1) (undo-tree-id845 . -1) (undo-tree-id846 . -1) (undo-tree-id847 . -1) (undo-tree-id848 . -1) (undo-tree-id849 . -1) (undo-tree-id850 . -1) (undo-tree-id851 . -1) (undo-tree-id852 . -1) (undo-tree-id853 . -1) (undo-tree-id854 . -1) (undo-tree-id855 . -1) (undo-tree-id856 . -1) (undo-tree-id857 . -1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (undo-tree-id860 . -1) (undo-tree-id861 . -1) (undo-tree-id862 . -1) (undo-tree-id863 . -1) (undo-tree-id864 . -1) (undo-tree-id865 . -1) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -917) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) (undo-tree-id944 . -1) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -918) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (#(" " 0 1 (fontified t face font-lock-string-face)) . -919) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (#(":" 0 1 (fontified t face font-lock-string-face)) . -920) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) (undo-tree-id1199 . -1) (undo-tree-id1200 . -1) (undo-tree-id1201 . -1) (undo-tree-id1202 . -1) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -921) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -922) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (#("x" 0 1 (fontified t face font-lock-string-face)) . -923) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) (undo-tree-id1269 . -1) (undo-tree-id1270 . -1) (undo-tree-id1271 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -924) (undo-tree-id1272 . -1) (undo-tree-id1273 . -1) (undo-tree-id1274 . -1) (undo-tree-id1275 . -1) (undo-tree-id1276 . -1) (undo-tree-id1277 . -1) (undo-tree-id1278 . -1) (undo-tree-id1279 . -1) 925 (919 . 925) (#(" " 0 1 (fontified t face font-lock-string-face)) . -919) (undo-tree-id1280 . -1) (undo-tree-id1281 . -1) (undo-tree-id1282 . -1) (undo-tree-id1283 . -1) (undo-tree-id1284 . -1) (undo-tree-id1285 . -1) (undo-tree-id1286 . -1) (undo-tree-id1287 . -1) (undo-tree-id1288 . -1) (undo-tree-id1289 . -1) (undo-tree-id1290 . -1) (undo-tree-id1291 . -1) (undo-tree-id1292 . -1) (undo-tree-id1293 . -1) (undo-tree-id1294 . -1) (undo-tree-id1295 . -1) (undo-tree-id1296 . -1) (undo-tree-id1297 . -1) (undo-tree-id1298 . -1) (undo-tree-id1299 . -1) (undo-tree-id1300 . -1) (undo-tree-id1301 . -1) (undo-tree-id1302 . -1) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (#(":" 0 1 (fontified t face font-lock-string-face)) . -920) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -921) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -922) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -923) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -924) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -925) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) 926 (920 . 926) (#(":" 0 1 (fontified t face font-lock-string-face)) . -920) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) 921 (919 . 921) (t 25590 32364 739615 330000)) nil (25590 32433 552761 881000) 0 nil])
([nil nil ((910 . 911)) nil (25590 32433 551845 53000) 0 nil])
([nil nil ((915 . 916) (#(" " 0 1 (fontified nil)) . -915) (undo-tree-id456 . -1) (915 . 916) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -915) (undo-tree-id457 . -1) (914 . 916) (#(" " 0 1 (fontified nil)) . -914) (undo-tree-id458 . -1) (914 . 915) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . -914) (undo-tree-id459 . -1) (914 . 915)) nil (25590 32433 551844 23000) 0 nil])
([nil nil ((#("]" 0 1 (fontified nil face nil)) . 919) (undo-tree-id451 . -1) (undo-tree-id452 . 1) (918 . 919) (917 . 919) (#("[" 0 1 (fontified nil face nil)) . -917) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (917 . 918) (916 . 917) (915 . 917) (#("{" 0 1 (fontified nil face font-lock-string-face)) . -915) (915 . 916) (#("v" 0 1 (fontified t face font-lock-string-face)) . -915) (undo-tree-id455 . -1) 916 (915 . 916)) nil (25590 32433 551840 66000) 0 nil])
([nil nil ((918 . 920)) nil (25590 32433 551831 485000) 0 nil])
([nil nil ((919 . 934)) nil (25590 32433 551828 201000) 0 nil])
([nil nil ((1027 . 1028) (1004 . 1005) 1025 (t 25590 32433 556282 972000)) nil (25590 32448 927607 946000) 0 nil])
([nil nil ((816 . 817) (#("w" 0 1 (fontified t)) . -816) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) (undo-tree-id1450 . -1) (undo-tree-id1451 . -1) (undo-tree-id1452 . -1) 817 (810 . 817) (809 . 811) (#("(" 0 1 (fontified nil face font-lock-builtin-face)) . -809) (undo-tree-id1453 . -1) (undo-tree-id1454 . -1) (804 . 810) (803 . 804) (t 25590 32448 936283 194000) 792) nil (25590 33576 284929 978000) 0 nil])
([nil nil ((978 . 980) (#("(" 0 1 (fontified nil)) . -978) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (976 . 979) (#("i" 0 1 (fontified t)) . -976) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (#("e" 0 1 (fontified t)) . -977) (undo-tree-id1459 . -1) 978 (971 . 978) (t 25590 33576 289632 258000)) nil (25590 33699 66306 138000) 0 nil])
([nil nil ((#("print(devices)
" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t face (rainbow-delimiters-depth-1-face)) 6 13 (fontified t) 13 14 (fontified t face (rainbow-delimiters-depth-1-face)) 14 15 (fontified t)) . 804) (undo-tree-id1460 . -14) (undo-tree-id1461 . -13) (undo-tree-id1462 . -15) (undo-tree-id1463 . -15) (undo-tree-id1464 . -15) (undo-tree-id1465 . -15) (undo-tree-id1466 . -13) (undo-tree-id1467 . 2) (undo-tree-id1468 . -14) (undo-tree-id1469 . 10) (undo-tree-id1470 . -6) (undo-tree-id1471 . -13) (undo-tree-id1472 . -13) (undo-tree-id1473 . -13) (undo-tree-id1474 . -13) (undo-tree-id1475 . -15) 817 (t 25590 33699 69633 918000)) nil (25590 33706 382878 623000) 0 nil])
([nil nil ((940 . 941) (827 . 828) 938 (t 25590 33706 386300 679000)) nil (25590 33843 822893 203000) 0 nil])
([nil nil ((911 . 912) (858 . 859) 909 (t 25590 33843 832969 228000)) nil (25590 33908 816662 860000) 0 nil])
([nil nil ((812 . 817) (810 . 812) (809 . 811) (#("(" 0 1 (fontified nil face font-lock-builtin-face)) . -809) (undo-tree-id1476 . -1) (undo-tree-id1477 . -1) (805 . 810) (#("i" 0 1 (fontified t)) . -805) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) 806 (805 . 806) (#("y" 0 1 (fontified t)) . -805) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (#("t" 0 1 (fontified t)) . -806) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (#("h" 0 1 (fontified t)) . -807) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) (undo-tree-id1582 . -1) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) (undo-tree-id1585 . -1) (undo-tree-id1586 . -1) (#("o" 0 1 (fontified t)) . -808) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) (undo-tree-id1602 . -1) (undo-tree-id1603 . -1) (undo-tree-id1604 . -1) (undo-tree-id1605 . -1) (undo-tree-id1606 . -1) (undo-tree-id1607 . -1) (undo-tree-id1608 . -1) (#("n" 0 1 (fontified t)) . -809) (undo-tree-id1609 . -1) (undo-tree-id1610 . -1) (undo-tree-id1611 . -1) (undo-tree-id1612 . -1) (undo-tree-id1613 . -1) (undo-tree-id1614 . -1) (undo-tree-id1615 . -1) (undo-tree-id1616 . -1) (undo-tree-id1617 . -1) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (undo-tree-id1624 . -1) (#(" " 0 1 (fontified t)) . -810) (undo-tree-id1625 . -1) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (undo-tree-id1634 . -1) 811 (804 . 811) (803 . 804) (t 25590 33908 819636 774000) 799) nil (25590 34007 279466 449000) 0 nil])
([nil nil ((#("print(devices)
" 0 5 (fontified t face font-lock-builtin-face) 5 6 (fontified t face (rainbow-delimiters-depth-1-face)) 6 13 (fontified t) 13 14 (fontified t face (rainbow-delimiters-depth-1-face)) 14 15 (fontified t)) . 804) (undo-tree-id1635 . 2) (undo-tree-id1636 . -14) (undo-tree-id1637 . -1) (undo-tree-id1638 . -1) (undo-tree-id1639 . -1) (undo-tree-id1640 . -1) (undo-tree-id1641 . -1) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (undo-tree-id1678 . -5) (undo-tree-id1679 . -5) (undo-tree-id1680 . -12) (undo-tree-id1681 . -12) (undo-tree-id1682 . -12) (undo-tree-id1683 . -12) (undo-tree-id1684 . -12) (undo-tree-id1685 . -12) (undo-tree-id1686 . -12) (undo-tree-id1687 . -15) (undo-tree-id1688 . -15) (undo-tree-id1689 . -15) (undo-tree-id1690 . -15) (undo-tree-id1691 . -15) (undo-tree-id1692 . -15) (undo-tree-id1693 . -15) (undo-tree-id1694 . -15) (undo-tree-id1695 . -15) (undo-tree-id1696 . -15) (undo-tree-id1697 . -15) (undo-tree-id1698 . -15) (undo-tree-id1699 . -12) (undo-tree-id1700 . -12) (undo-tree-id1701 . -14) (undo-tree-id1702 . -14) (undo-tree-id1703 . -14) (undo-tree-id1704 . -14) (undo-tree-id1705 . -12) (undo-tree-id1706 . -12) (undo-tree-id1707 . -14) (undo-tree-id1708 . -14) (undo-tree-id1709 . -12) (undo-tree-id1710 . -12) (undo-tree-id1711 . -12) (undo-tree-id1712 . -12) (undo-tree-id1713 . -15) 816 (t 25590 34007 282971 447000)) nil (25590 34069 322290 590000) 0 nil])
([nil nil ((1042 . 1054) (#("print" 0 5 (fontified t face font-lock-builtin-face)) . 1042) (undo-tree-id1741 . -4) (undo-tree-id1742 . -5) (t 25590 34069 326305 608000)) nil (25590 34280 72230 418000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 1054) (undo-tree-id1738 . 1) (undo-tree-id1739 . 1) (undo-tree-id1740 . -1)) nil (25590 34280 72228 385000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-unmatched-face))) . 1256) (undo-tree-id1736 . 1) (undo-tree-id1737 . -1)) nil (25590 34280 72226 152000) 0 nil])
([nil nil ((1263 . 1266) (1262 . 1264) (#("(" 0 1 (fontified nil face font-lock-builtin-face)) . -1262) (1257 . 1263) (#("f" 0 1 (fontified t)) . -1257) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (#("i" 0 1 (fontified t)) . -1258) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) 1259 (1257 . 1259) (1256 . 1257) 1138) nil (25590 34280 72223 914000) 0 nil])
([nil nil ((1271 . 1284) (1266 . 1271) (1265 . 1267) (#("(" 0 1 (fontified nil face font-lock-string-face)) . -1265) (1265 . 1266)) nil (25590 34280 72220 223000) 0 nil])
([nil nil ((1287 . 1299) (1279 . 1287) (1278 . 1280) (#("'" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -1278) (#("cmd" 0 3 (fontified nil)) . 1279) (1278 . 1279) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 1278 1300 nil nil nil t #s(yas--exit 1301 nil))) #s(yas--exit 1301 nil) 1 nil #s(yas--field 1 1278 1300 nil nil nil t #s(yas--exit 1301 nil)) nil nil)) (1268 . 1282) (#("getoutput" 0 9 (fontified t)) . -1268) (undo-tree-id1728 . -9) (undo-tree-id1729 . -9) (1268 . 1277) (1265 . 1268) (#("e" 0 1 (fontified t)) . -1265) (undo-tree-id1730 . -1) (#("w" 0 1 (fontified t)) . -1266) (undo-tree-id1731 . -1) 1267 (1257 . 1267) (1257 . 1258) 1283) nil (25590 34280 72218 468000) 0 nil])
([nil nil ((apply yas--snippet-revive 1268 1301 #s(yas--snippet nil (#s(yas--field 1 1278 1300 nil nil nil t #s(yas--exit 1301 nil))) #s(yas--exit 1301 nil) 1 nil #s(yas--field 1 1278 1300 nil nil nil t #s(yas--exit 1301 nil)) nil nil))) nil (25590 34280 72214 275000) 0 nil])
([nil nil ((1355 . 1357) (1354 . 1356) (#("{" 0 1 (fontified nil face font-lock-string-face)) . -1354) (1351 . 1355) (1349 . 1351) (1330 . 1349) (1329 . 1331) (#("`" 0 1 (fontified nil face font-lock-string-face)) . -1329) (1328 . 1330)) nil (25590 34280 72213 521000) 0 nil])
([nil nil ((1356 . 1361)) nil (25590 34280 72212 186000) 0 nil])
([nil nil ((1378 . 1379) (1362 . 1378)) nil (25590 34280 72211 618000) 0 nil])
([nil nil ((1378 . 1382)) nil (25590 34280 72210 922000) 0 nil])
([nil nil ((1395 . 1399) (#("k" 0 1 (fontified t face font-lock-string-face)) . -1395) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -1396) (undo-tree-id1727 . -1) 1397 (1386 . 1397)) nil (25590 34280 72209 980000) 0 nil])
([nil nil ((#("`" 0 1 (fontified nil face font-lock-string-face)) . 1402) (1401 . 1402) (1400 . 1402) (#("`" 0 1 (fontified nil face font-lock-string-face)) . -1400) (1399 . 1401)) nil (25590 34280 72207 115000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-string-face)) . -1401) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (#("w" 0 1 (fontified t face font-lock-string-face)) . -1402) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (#("w" 0 1 (fontified t face font-lock-string-face)) . -1403) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) 1404 (1401 . 1404)) nil (25590 34280 72205 824000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1468 . 1469) (nil fontified nil 1401 . 1469) (1401 . 1469) 1400) nil (25590 34280 72201 330000) 0 nil])
([nil nil ((1476 . 1481) (#("k" 0 1 (fontified t face nil)) . -1476) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) 1477 (1472 . 1477) (1471 . 1473) (#("{" 0 1 (fontified nil face font-lock-string-face)) . -1471) (1470 . 1472)) nil (25590 34280 72198 575000) 0 nil])
([nil nil ((#("{\"false\" if state else \"true\"}" 0 9 (fontified t face nil) 9 11 (fontified t face font-lock-keyword-face) 11 18 (fontified t face nil) 18 22 (fontified t face font-lock-keyword-face) 22 29 (fontified t face nil) 29 30 (fontified t face nil)) . 1354) (undo-tree-id1748 . -29) (undo-tree-id1749 . -29) (undo-tree-id1750 . -29) (undo-tree-id1751 . -29) (undo-tree-id1752 . -29) (undo-tree-id1753 . 1) (undo-tree-id1754 . -30) (undo-tree-id1755 . 30) (undo-tree-id1756 . -1) 1383 (t 25590 34280 82975 183000)) nil (25590 34481 306278 90000) 0 nil])
([nil nil ((1354 . 1359)) nil (25590 34481 306270 593000) 0 nil])
([nil nil ((1361 . 1362) (1328 . 1329) 1359) nil (25590 34481 306269 814000) 0 nil])
([nil nil ((1328 . 1329)) nil (25590 34481 306268 694000) 0 nil])
([nil nil ((1330 . 1344)) nil (25590 34481 306268 21000) 0 nil])
([nil nil ((1403 . 1408) (1391 . 1403) (#("disks" 0 5 (fontified t face nil)) . -1391) (undo-tree-id1743 . -5) (undo-tree-id1744 . -5) (undo-tree-id1745 . -5) (undo-tree-id1746 . -5) (undo-tree-id1747 . -5) 1396 (1380 . 1396) (1379 . 1381) (#("`" 0 1 (fontified nil face nil)) . -1379) (1376 . 1380)) nil (25590 34481 306264 180000) 0 nil])
([nil nil ((1410 . 1411) (t 25590 34481 309644 649000)) nil (25590 34494 664968 765000) 0 nil])
([nil nil ((1329 . 1331) (#("{" 0 1 (fontified nil face font-lock-string-face)) . -1329) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (1329 . 1330)) nil (25590 34494 664967 534000) 0 nil])
([nil nil ((#("}" 0 1 (fontified t face nil)) . 1330) (undo-tree-id1757 . 1) (undo-tree-id1758 . 1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1)) nil (25590 34494 664963 579000) 0 nil])
([nil nil ((1427 . 1428) (#("`" 0 1 (fontified t face font-lock-string-face)) . 1427) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (t 25590 34494 669644 829000)) nil (25590 34591 283686 784000) 0 nil])
([nil nil ((1496 . 1497) (#("`" 0 1 (fontified t face font-lock-string-face)) . 1496) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1)) nil (25590 34591 283681 230000) 0 nil])
([nil nil ((#("~" 0 1 (fontified t face font-lock-string-face)) . 1461) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (t 25590 34591 289646 155000)) nil (25590 35459 461754 411000) 0 nil])
([nil nil ((1461 . 1472)) nil (25590 35459 461743 999000) 0 nil])
([nil nil ((1461 . 1462) (#("/home/yusuf" 0 11 (fontified t face font-lock-string-face)) . 1461) (undo-tree-id1775 . -10) (undo-tree-id1776 . -10) (undo-tree-id1777 . -10) (undo-tree-id1778 . -10) (undo-tree-id1779 . -10) (undo-tree-id1780 . -10) (undo-tree-id1781 . -10) (undo-tree-id1782 . -10) (undo-tree-id1783 . -10) (undo-tree-id1784 . -10) (undo-tree-id1785 . -10) (undo-tree-id1786 . -10) (undo-tree-id1787 . -10) (undo-tree-id1788 . -10) (undo-tree-id1789 . -10) (undo-tree-id1790 . -10) (undo-tree-id1791 . -10) (undo-tree-id1792 . -10) (undo-tree-id1793 . -10) (undo-tree-id1794 . -10) (undo-tree-id1795 . -10) (undo-tree-id1796 . -11) (undo-tree-id1797 . -10) (undo-tree-id1798 . -10) (undo-tree-id1799 . -10) (undo-tree-id1800 . -10) (undo-tree-id1801 . -6) (undo-tree-id1802 . -6) (undo-tree-id1803 . -5) (undo-tree-id1804 . -5) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -11) (undo-tree-id1812 . -11) (t 25590 35459 466325 185000)) nil (25590 35502 454882 967000) 0 nil])
([nil nil ((#("~" 0 1 (face font-lock-string-face fontified t)) . 1461) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (t 25590 35502 462992 450000)) nil (25592 56334 609065 913000) 0 nil])
([nil nil ((1461 . 1472)) nil (25592 56334 609039 784000) 0 nil])
([nil nil ((1507 . 1508) (1428 . 1429) 1505 (t 25592 56334 632065 976000)) nil (25592 57392 534544 388000) 0 nil])
([nil nil ((1428 . 1429)) ((#("\\" 0 1 (face font-lock-string-face fontified t)) . 1428) (undo-tree-id36 . 1) (undo-tree-id37 . 1)) (25592 57395 57621 994000) 0 nil])
([nil nil ((1508 . 1509)) ((#("\\" 0 1 (face font-lock-string-face fontified t)) . 1508)) (25592 57395 483533 0) 0 nil])
([nil nil ((1428 . 1434)) ((#("sh -c " 0 6 (face font-lock-string-face fontified t)) . 1428) (undo-tree-id4 . -5) (undo-tree-id5 . -4) (undo-tree-id6 . -5) (undo-tree-id7 . -5) (undo-tree-id8 . -5) (undo-tree-id9 . -5) (undo-tree-id10 . -5) (undo-tree-id11 . -5) (undo-tree-id12 . -5) (undo-tree-id13 . -5) (undo-tree-id14 . -5) (undo-tree-id15 . -5) (undo-tree-id16 . -5) (undo-tree-id17 . -5) (undo-tree-id18 . -5) (undo-tree-id19 . -5) (undo-tree-id20 . -5) (undo-tree-id21 . -5) (undo-tree-id22 . -5) (undo-tree-id23 . -5) (undo-tree-id24 . -5) (undo-tree-id25 . -5) (undo-tree-id26 . -5) (undo-tree-id27 . -5) (undo-tree-id28 . -5) (undo-tree-id29 . -4) (undo-tree-id30 . -4) (undo-tree-id31 . -4) (undo-tree-id32 . -4) (undo-tree-id33 . -4) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (t 25592 57183 235412 256000)) (25592 57396 402665 181000) 0 nil])
([nil nil ((#("sh -c \\" 0 6 (face font-lock-string-face fontified t) 6 7 (face font-lock-string-face fontified t)) . 1428) (undo-tree-id129 . -6) (undo-tree-id130 . 1) (undo-tree-id131 . -6) (undo-tree-id132 . -6) (undo-tree-id133 . -5) (undo-tree-id134 . -6) (undo-tree-id135 . -5) (undo-tree-id136 . -5) (undo-tree-id137 . -5) (undo-tree-id138 . -5) (undo-tree-id139 . -5) (undo-tree-id140 . -5) (undo-tree-id141 . -5) (undo-tree-id142 . -5) (undo-tree-id143 . -5) (undo-tree-id144 . -5) (undo-tree-id145 . -5) (undo-tree-id146 . -5) (undo-tree-id147 . -5) (undo-tree-id148 . -5) (undo-tree-id149 . -5) (undo-tree-id150 . -5) (undo-tree-id151 . -5) (undo-tree-id152 . -5) (undo-tree-id153 . -5) (undo-tree-id154 . -5) (undo-tree-id155 . -5) (undo-tree-id156 . -5) (undo-tree-id157 . -5) (undo-tree-id158 . -4) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . 1) (undo-tree-id165 . 1) (undo-tree-id166 . -7) (undo-tree-id167 . -6) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -3) (undo-tree-id171 . -3) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -5) (undo-tree-id175 . -5) (undo-tree-id176 . -6) (undo-tree-id177 . -6) (undo-tree-id178 . -6) (undo-tree-id179 . -7) 1434 (t 25592 57183 235412 256000)) nil (25592 57423 150322 445000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . 1428) (undo-tree-id120 . 1) (undo-tree-id121 . 1) (undo-tree-id122 . 1) (undo-tree-id123 . 1) (undo-tree-id124 . 1) (undo-tree-id125 . 1) (undo-tree-id126 . 1) (undo-tree-id127 . -1) (undo-tree-id128 . -1)) nil (25592 57423 150245 650000) 0 nil])
([nil nil ((#("\\" 0 1 (face font-lock-string-face fontified t)) . 1506) (undo-tree-id118 . -1) (undo-tree-id119 . -1)) nil (25592 57423 150240 423000) 0 nil])
([nil nil ((#("'" 0 1 (face font-lock-string-face fontified t)) . 1506) (undo-tree-id113 . 1) (undo-tree-id114 . 1) (undo-tree-id115 . 1) (undo-tree-id116 . -1) (undo-tree-id117 . -1)) nil (25592 58507 977152 893000) 0 nil])
([nil nil ((1320 . 1334) (t 25592 58794 452103 467000)) nil (25592 59197 21483 573000) 0 nil] [nil nil ((#("udiskie -modi udiskie:/home/yusuf/Scripts/RofiMenus/udiskie-menu.py" 0 67 (face font-lock-string-face fontified t)) . 1439) (undo-tree-id38 . -66) (undo-tree-id39 . -32) (undo-tree-id40 . -66) (undo-tree-id41 . -32) (undo-tree-id42 . -32) (undo-tree-id44 . -32) (undo-tree-id45 . -32) (undo-tree-id46 . -32) (undo-tree-id47 . -66) (undo-tree-id48 . -66) (undo-tree-id49 . -67) (undo-tree-id50 . -66) (undo-tree-id52 . -67) (undo-tree-id54 . -67) (undo-tree-id56 . -67) (undo-tree-id58 . -67) (undo-tree-id60 . -67) (undo-tree-id62 . -67) (undo-tree-id64 . -67) (undo-tree-id66 . -67) (undo-tree-id68 . -67) (undo-tree-id70 . -65) (undo-tree-id72 . -14) (undo-tree-id74 . -8) (undo-tree-id76 . -8) (undo-tree-id78 . -8) (undo-tree-id80 . -67) (undo-tree-id81 . -66) (undo-tree-id83 . -6) (undo-tree-id85 . -8) (undo-tree-id87 . -12) (undo-tree-id89 . -13) (undo-tree-id91 . -20) (undo-tree-id93 . -22) (undo-tree-id95 . -26) (undo-tree-id97 . -27) (undo-tree-id99 . -32) (undo-tree-id101 . -33) (undo-tree-id103 . -40) (undo-tree-id105 . -40) (undo-tree-id107 . -40) (undo-tree-id109 . -66) (undo-tree-id111 . -66) 1505) ((1439 . 1506)) (25592 58507 305250 282000) 0 nil])
([nil nil ((1453 . 1457) (#("udiskie -modi udiskie:/home/yusuf/Scripts/RofiMenus/udiskie-menu.py" 0 67 (face font-lock-string-face fontified t)) . 1453) (undo-tree-id193 . -66) (undo-tree-id194 . -32) (undo-tree-id195 . -32) (undo-tree-id196 . -32) (undo-tree-id197 . -32) (undo-tree-id198 . -32) (undo-tree-id199 . -32) (undo-tree-id200 . -66) (undo-tree-id201 . -66) (undo-tree-id202 . -67) (undo-tree-id203 . -40) (undo-tree-id204 . -37) (undo-tree-id205 . -67) (undo-tree-id206 . -67) (undo-tree-id207 . -67) (t 25592 59197 25442 891000)) nil (25592 59230 513147 727000) 0 nil])
([nil nil ((1439 . 1443)) ((#("drun" 0 4 (face font-lock-string-face fontified t)) . 1439) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -3) (undo-tree-id183 . -3) (undo-tree-id184 . -3) (undo-tree-id185 . -3) (undo-tree-id186 . -3) (undo-tree-id187 . -3) (undo-tree-id188 . -3) (undo-tree-id189 . -3) (undo-tree-id190 . -3) (undo-tree-id191 . -3) (undo-tree-id192 . -3) (t 25592 57423 155415 929000)) (25592 57423 149734 191000) 0 nil])
([nil nil ((1331 . 1336) (t 25592 59230 518776 734000)) nil (25592 59255 315413 762000) 0 nil])
nil
([nil nil ((1329 . 1330) (#("100000000" 0 9 (face font-lock-string-face fontified t)) . 1329) (undo-tree-id208 . -8) (undo-tree-id209 . 2) (undo-tree-id210 . -6) (undo-tree-id211 . -6) (undo-tree-id212 . -6) (undo-tree-id213 . -6) (undo-tree-id214 . -6) (undo-tree-id215 . -6) (undo-tree-id216 . -6) (undo-tree-id217 . -6) (undo-tree-id218 . -6) (undo-tree-id219 . -5) (undo-tree-id220 . -5) (undo-tree-id221 . -4) (undo-tree-id222 . -4) (undo-tree-id223 . -3) (undo-tree-id224 . -3) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -9) (undo-tree-id230 . -9) (t 25592 59255 322110 448000)) nil (25592 59288 328316 469000) 0 nil])
([nil nil ((#(" :timeout 0" 0 11 (face font-lock-string-face fontified t)) . 1319) (undo-tree-id231 . -10) (undo-tree-id232 . -10) (undo-tree-id233 . -10) (undo-tree-id234 . -10) (undo-tree-id235 . -10) (undo-tree-id236 . -10) (undo-tree-id237 . -10) (undo-tree-id238 . -10) (undo-tree-id239 . -10) (undo-tree-id240 . -10) (undo-tree-id241 . -10) (undo-tree-id242 . -10) (undo-tree-id243 . -10) (undo-tree-id244 . -10) (undo-tree-id245 . -10) (undo-tree-id246 . -10) (undo-tree-id247 . -10) (undo-tree-id248 . -10) (undo-tree-id249 . -10) (undo-tree-id250 . -10) (undo-tree-id251 . -10) (undo-tree-id252 . -10) (undo-tree-id253 . -10) (undo-tree-id254 . -10) (undo-tree-id255 . -10) (undo-tree-id256 . -10) (undo-tree-id257 . -10) (undo-tree-id258 . -10) (undo-tree-id259 . -10) (undo-tree-id260 . -10) (undo-tree-id261 . -11) (undo-tree-id262 . -10) (undo-tree-id263 . -10) (undo-tree-id264 . -10) (undo-tree-id265 . -10) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -11) (t 25592 59288 335444 284000)) nil (25592 59307 85005 362000) 0 nil])
([nil nil ((1460 . 1463) (1439 . 1460) (#("drun" 0 4 (fontified t face font-lock-string-face)) . 1439) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -3) (t 25592 59307 88777 902000)) nil (25593 44018 689659 123000) 0 nil])
([nil nil ((1448 . 1452) (#("script" 0 6 (fontified t face font-lock-string-face)) . 1448) (undo-tree-id0 . -5) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (undo-tree-id6 . -2) (undo-tree-id7 . -3) (undo-tree-id8 . -3) (undo-tree-id9 . -3) (undo-tree-id10 . -4) (undo-tree-id11 . -4) (undo-tree-id12 . -4) (undo-tree-id13 . -5) (undo-tree-id14 . -5) (undo-tree-id15 . -5) (undo-tree-id16 . -6) (undo-tree-id17 . -6) (undo-tree-id18 . -6) (undo-tree-id19 . -6) (undo-tree-id20 . -6)) nil (25593 44018 689655 61000) 0 nil])
([nil nil ((1493 . 1496) (1479 . 1493) (1472 . 1479) (1461 . 1472)) nil (25593 44018 689609 246000) 0 nil])
([nil current ((1496 . 1498) (t 25593 44018 702037 830000)) nil (25593 44048 405990 926000) 0 nil])
nil
