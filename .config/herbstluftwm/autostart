#!/usr/bin/env python

import os
import subprocess

GDK_SCALE = int(os.getenv('GDK_SCALE', 1))
HOSTNAME = subprocess.check_output('echo "$HOSTNAME"', shell=True, text=True).strip()


def hc(*args):
    P = subprocess.Popen(
        f'herbstclient {" ".join(args)}', text=True, shell=True,
        stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    err = not bool(P.stderr.read())
    return P.stdout.read(), err


startup_cmds = [
    "localectl --no-convert set-x11-keymap us,ara pc104 ,qwerty"
    " 'grp:alt_shift_toggle,caps:swapescape'",
    "setxkbmap -option 'caps:escape' -option 'altwin:menu_win'"
    " -option 'terminate:ctrl_alt_bksp'",
    "perWindowLayoutD",
    "sxhkd -c ~/.config/sxhkd/apps_keys",
    "picom",
    "redshift",
    "nm-applet",
    "udiskie -t",
    'dunst -geometry "$((250*GDK_SCALE))x4-$((15*GDK_SCALE))+$((26*GDK_SCALE))" -padding $((8*GDK_SCALE)) -horizontal_padding $((10*GDK_SCALE)) -frame_width $((2*GDK_SCALE)) -font "Dejavu Sans Mono $((8+GDK_SCALE))" -corner_radius 25 -min_icon_size $((32*GDK_SCALE)) -max_icon_size $((32*GDK_SCALE))',
    "blueman-applet",
    "emacs --daemon",
    "pasystray",
    "parcellite",
    "mpd",
    "~/.config/bspwm/scripts/set_wallpaper.py",
    "~/.config/bspwm/bar/start_bar_herbst.py",
    "xfce4-panel -d",
    "~/.config/herbstluftwm/auto_move_sticky.py"]

if hc('new_attr bool my_not_first_autostart')[1]:
    for cmd in startup_cmds:
        subprocess.Popen(cmd, text=True, shell=True)
    if HOSTNAME == 'yusufs-lenovo':
        xinput_list = subprocess.check_output('xinput list --name-only',
                                              shell=True, text=True)
        if 'Logitech USB Optical Mouse' in xinput_list.splitlines():
            subprocess.Popen(
                'xinput set-prop "Logitech USB Optical Mouse" "libinput Accel Speed" 1',
                shell=True, text=True)
        subprocess.Popen('xinput disable "AT Translated Set 2 keyboard"', shell=True, text=True)
        subprocess.Popen('xinput disable "SynPS/2 Synaptics TouchPad"', shell=True, text=True)


# this is a simple config for herbstluftwm
hc('emit_hook', 'reload')

# remove all existing keybindings
hc('keyunbind', '--all')

MOD = 'Mod4'

hc(f'keybind {MOD}-Control-Shift-q quit')
hc(f'keybind {MOD}-Control-Shift-r reload')
hc(f'keybind {MOD}-q close_and_remove')

# focusing, moving and resizing clients
RESIZE_STEP = 0.05
DIR = {'left': 'h', 'right': 'l', 'up': 'k', 'down': 'j'}
for dire, key in DIR.items():
    hc(f'keybind {MOD}-{dire.title()} focus {dire}')
    hc(f'keybind {MOD}-{key} focus {dire}')
    hc(f'keybind {MOD}-Shift-{dire.title()} shift {dire}')
    hc(f'keybind {MOD}-Shift-{key} shift {dire}')
    hc(f'keybind {MOD}-Control-{dire.title()} resize {dire} +{RESIZE_STEP}')
    hc(f'keybind {MOD}-Control-{key} resize {dire} +{RESIZE_STEP}')

# splitting frames
# create an empty frame at the specified direction
hc(f"keybind {MOD}-z split bottom 0.5")
hc(f"keybind {MOD}-x split right 0.5")
# let the current frame explode into subframes
hc(f"keybind {MOD}-Control-space split explode")

# according to
# https://www.reddit.com/r/herbstluftwm/comments/iwewnn/settings_default_frame_layout_is_not_working/
# this has to be set before defining tags
hc("set default_frame_layout 2")
hc("set_layout max")

tags = {'I': '1', 'II': '2', 'III': '3', 'IV': '4', 'V': '5', 'VI': '6',
        'VII': '7', 'VIII': '8', 'IX': '9', 'X': '0'}
tags_lst = list(tags.keys())

sticky_script = os.path.expanduser('~/.config/herbstluftwm/switch_tag.py')
hc(f'rename default {list(tags.keys())[0]}')
for tag, key in tags.items():
    hc(f'add {tag}')
    # use previous focused tag if the selected tag is currently focused
    hc(f'keybind {MOD}-{key} or , and . chain .-. compare '
       f'tags.focus.name != {tag} . use {tag} , use_previous ')
    hc('keybind', f'{MOD}-Shift-{key}', 'move', tag)

# cycle through tags
hc(f'keybind {MOD}-period use_index +1 --skip-visible')
hc(f'keybind {MOD}-comma  use_index -1 --skip-visible')

# window states
hc(f'keybind {MOD}-m set_attr clients.focus.minimized on')
hc(f"keybind {MOD}-Ctrl-m spawn sh -c '~/.config/herbstluftwm/restore_minimized.py'")
hc(f'keybind {MOD}-f fullscreen toggle')
hc(f'keybind {MOD}-Shift-f set_attr clients.focus.floating toggle')
hc(f'keybind {MOD}-Shift-s chain .-. new_attr bool clients.focus.my_sticky'
   ' .-. set_attr clients.focus.my_sticky toggle ')

# move floating
hc(f"keybind {MOD}-v spawn sh -c '~/.config/herbstluftwm/move_floating_to_corner.py'")
hc(f"keybind {MOD}-Shift-v spawn sh -c '~/.config/herbstluftwm/move_floating_to_corner.py -1'")

# scratchpads
hc(f"keybind {MOD}-d spawn sh -c '~/.config/herbstluftwm/scratch.py -c scratch_term -w 0.8 -ht 0.65 -y {20*GDK_SCALE} -x 0.1 --termflags --title=Dropdown_terminal --fontsize={20*GDK_SCALE} --fade=50 -e tmux -2'")
hc(f"keybind {MOD}-Ctrl-c spawn sh -c '~/.config/herbstluftwm/scratch.py -c dropdown_calc -w 0.3 \
  -ht 0.3 -x 0.35 -y 0.7 --termflags --title=Calculator_DropDown -e bc'")

hc(f'keybind {MOD}-Tab or , and . compare tags.focus.curframe_wcount = 2 '
   '. cycle_layout +1 , cycle_layout +1')

# mouse
hc('mouseunbind --all')
hc(f'mousebind {MOD}-Button1 move')
hc(f'mousebind {MOD}-Button2 zoom')
hc(f'mousebind {MOD}-Button3 resize')

# focus
hc(f'keybind {MOD}-BackSpace   cycle_monitor')
hc(f'keybind {MOD}-Shift-Tab   cycle_all +1')
hc(f'keybind {MOD}-c cycle')
hc(f'keybind {MOD}-Shift-c cycle -1')
hc(f'keybind {MOD}-grave jumpto urgent')
hc(f"keybind {MOD}-F1 spawn sh -c 'man -Tpdf herbstluftwm | zathura -'")

# Theming and general settings
hc('attr theme.tiling.reset 1')
hc("attr theme.floating.reset 1")
hc("set frame_border_active_color '#ff79c6'")
hc("set frame_border_normal_color '#44475a'")
hc("set frame_bg_normal_color '#565656'")
hc("set frame_bg_active_color '#345F0C'")
hc(f"set frame_border_width {3*GDK_SCALE}")
hc("set always_show_frame off")
hc("set frame_bg_transparent on")
hc("set frame_transparent_width 0")
hc(f"set frame_gap {4*GDK_SCALE}")

hc("attr theme.active.color '#bd93f9'")
hc("attr theme.normal.color '#6272a4'")
hc("attr theme.urgent.color orange")
hc("attr theme.inner_width 1")
hc("attr theme.inner_color black")
hc("attr theme.border_width 3")
hc(f"attr theme.floating.border_width {4*GDK_SCALE}")
hc("attr theme.floating.outer_width 0")
hc("attr theme.floating.outer_color '#ff79c6'")
hc("attr theme.active.inner_color '#3E4A00'")
hc("attr theme.active.outer_color '#3E4A00'")
hc("attr theme.background_color '#141414'")

hc("set window_gap 0")
hc("set frame_padding 0")
hc("set smart_window_surroundings off")
hc("set smart_frame_surroundings on")
hc("set mouse_recenter_gap 0")
hc("set auto_detect_monitors on")
hc("set focus_follows_mouse on")
hc("set tree_style '╾│ ├└╼─┐'")
hc("detect_monitors")

# rules
hc('unrule -F')
hc('rule focus=on')
hc('rule floatplacement=smart')
hc("rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on")
hc("rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on")
hc("rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)'"
   " manage=off")
hc("rule class='pinentry-gtk-2' floating=on")
hc("rule instance='pinentry-gtk-2' floating=on")
hc("rule class='Oblogout' fullscreen=on")
hc(f"rule class='TelegramDesktop' tag='{tags_lst[8]}'")
hc(f"rule class='transmission' tag='{tags_lst[7]}'")
hc(f"rule class='qutebrowser' tag='{tags_lst[0]}'")
hc("rule name='dropdown_terminal' floating=on")
hc("rule title='Picture-in-Picture' floating=on")
hc("rule title='Picture-in-Picture' focus=off")
hc("rule title='Picture-in-Picture' hook='make_sticky'")
hc("rule instance='qutebrowser-youtube' floating=on")
hc("rule instance='qutebrowser-youtube' focus=off")
hc("rule instance='qutebrowser-youtube' hook='make_sticky'")

hc("unlock")
