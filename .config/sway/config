# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.

set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
set $emacsclient emacsclient -c -a ""
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

font pango:Roboto 10
### Idle configuration
#
# Example configuration:
#
exec swayidle -w \
         timeout 300 'swaylock -f -c 000000' \
         timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+Ctrl+Return exec $term -e ipython

    # Browse man pages
    bindsym $mod+F1 exec ~/Scripts/browse_man_pages.py

# all open windows

    # Kill focused window
    bindsym --to-code $mod+q kill


    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    for_window [title=".*"] title_format "%title - %class : %instance"
    for_window [title=".*"] border pixel 4
    for_window [floating] border 2
    for_window [title="Picture-in-Picture"] sticky enable
    for_window [title="Picture-in-Picture"] move position 0ppt 0ppt

    assign [class='firefox'] workspace 1
    assign [class='qutebrowser'] workspace 1

    floating_modifier $mod normal
    bindsym --to-code $mod+Shift+s sticky toggle
    titlebar_border_thickness 2
    hide_edge_borders smart
    smart_gaps on
    tiling_drag enable
    workspace_auto_back_and_forth enable
    workspace_layout tabbed

    # Reload the configuration file
    bindsym $mod+Shift+c reload

bindsym XF86AudioRaiseVolume exec volume_ctl.sh +5
bindsym XF86AudioLowerVolume exec volume_ctl.sh -5
bindsym $mod+minus exec volume_ctl.sh -5
bindsym $mod+equal exec volume_ctl.sh +5
bindsym $mod+Shift+minus exec brightness_ctl.sh -5
bindsym $mod+Shift+equal exec brightness_ctl.sh +5
bindsym --to-code $mod+Shift+B exec toggle_brightness.py

#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym --to-code $mod+b splith
    bindsym --to-code $mod+v splitv

    # Switch the current container between different layout styles
    bindsym --to-code $mod+s layout toggle split
    bindsym --to-code $mod+t layout tabbed
    bindsym --to-code $mod+w exec "rofi -show window -modi window,windowcd"
    bindsym --to-code $mod+e exec "rofi -show run -modi run,drun"
    bindsym --to-code $mod+Shift+e exec "rofi -show powermenu -modi powermenu:~/Scripts/powermenu.py -theme Lavendar_icons"
    bindsym --to-code $mod+r exec "rofi -show nmcli -modi nmcli:~/Scripts/nmcli-menu.py"
    bindsym --to-code $mod+Ctrl+c exec "rofi -show calc -modi calc -no-show-match -no-sort"

    # Make the current focus fullscreen
    bindsym --to-code $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym --to-code $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

# Resizing containers:
#
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym --to-code $mod+Ctrl+$left resize shrink width 10px
    bindsym --to-code $mod+Ctrl+$down resize grow height 10px
    bindsym --to-code $mod+Ctrl+$up resize shrink height 10px
    bindsym --to-code $mod+Ctrl+$right resize grow width 10px

    # Ditto, with arrow keys
    bindsym $mod+Ctrl+Left resize shrink width 10px
    bindsym $mod+Ctrl+Down resize grow height 10px
    bindsym $mod+Ctrl+Up resize shrink height 10px
    bindsym $mod+Ctrl+Right resize grow width 10px

    # Return to default mode

mode "guiapps" {
     bindsym --to-code t exec telegram-desktop && swaymsg mode "default"
     bindsym --to-code g exec gimp
     bindsym --to-code d exec discord
     bindsym --to-code q exec transmission-qt
     bindsym --to-code s exec prime-run steam-native
     bindsym --to-code z exec zeal
     bindsym Escape mode "default"
}

bindsym --to-code $mod+g mode guiapps
bindsym --to-code $mod+Shift+w exec qutebrowser
bindsym --to-code $mod+Ctrl+w exec env -u WAYLAND_DISPLAY prime-run qutebrowser
bindsym --to-code $mod+Ctrl+e exec $emacsclient 
bindsym --to-code $mod+Ctrl+f exec $term -e bicon.bin ranger 
bindsym --to-code --release Print exec grim
bindsym --to-code --release Shift+Print exec ~/Scripts/slurp_grim.sh
#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.

bar {
    position top

    swaybar_command waybar
}

input "type:keyboard" {
xkb_layout us,ara
xkb_variant ,qwerty
xkb_options grp:alt_shift_toggle,caps:swapescape,altwin:menu_win
repeat_delay 400
repeat_rate 25
}

# for lenovo laptop
exec_always ~/.config/sway/disable_touchpad.sh

# gtk3 themes fix
exec_always ~/.config/sway/import_gsetting.sh

default_border pixel 4
default_floating_border pixel 2
gaps inner 10
gaps outer 5

# startup apps
exec ~/.config/sway/layoutPerWindow.py
exec udiskie -t
exec dunst -geometry 250x4-15+26 -padding 8 -frame-width 2 -font "Dejavu Sans Mono 9" -corner_radius 10 -min_icon_size 32 -max_icon_size 32
exec mpd
exec nm-applet
exec emacs --daemon
exec blueman-applet

include /etc/sway/config.d/*

client.focused #4b0082 #4b0082 #f4e6ff
client.focused_inactive #4b0082 #0e0019 #8e50d5
client.unfocused #0e0019 #0e0019 #4b0082
client.focused_tab_title #4b0082 #0e0019 #f4e6ff
client.urgent #d34328 #d34328 #f4e6ff
 
 


# exec nm-applet
# exec pasystray

